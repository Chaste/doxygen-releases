<map id="G" name="G">
<area shape="rect" href="$classTetrahedralMesh.html" title="{TetrahedralMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mElementWeightedDirections\l# mElementJacobians\l# mElementInverseJacobians\l# mElementJacobianDeterminants\l# mBoundaryElementWeightedDirections\l# mBoundaryElementJacobianDeterminants\l|+ TetrahedralMesh()\l+ ConstructFromMeshReader()\l+ ReadNodesPerProcessorFile()\l+ CheckIsConforming()\l+ GetVolume()\l+ GetSurfaceArea()\l+ RefreshMesh()\l+ PermuteNodes()\l+ PermuteNodes()\l+ GetContainingElementIndex()\l+ GetContainingElementIndexWithInitialGuess()\l+ GetNearestElementIndex()\l+ GetNearestElementIndexFromTestElements()\l+ GetContainingElementIndices()\l+ Clear()\l+ CalculateBoundaryOfFlaggedRegion()\l+ GetAngleBetweenNodes()\l+ UnflagAllElements()\l+ FlagElementsNotContainingNodes()\l+ RefreshJacobianCachedData()\l+ GetJacobianForElement()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForElement()\l+ GetWeightedDirectionForBoundaryElement()\l+ EdgesBegin()\l+ EdgesEnd()\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l# ExportToMesher()\l# ImportFromMesher()\l# InitialiseTriangulateIo()\l# FreeTriangulateIo()\l&#45; serialize()\l}" alt="" coords="40,1762,363,2493"/>
<area shape="rect" href="$classAbstractTetrahedralMesh.html" title="{AbstractTetrahedralMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mMeshIsLinear\l# mElements\l# mBoundaryElements\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ AbstractTetrahedralMesh()\l+ ~AbstractTetrahedralMesh()\l+ GetNumElements()\l+ GetNumLocalElements()\l+ GetNumBoundaryElements()\l+ GetNumLocalBoundaryElements()\l+ GetNumAllElements()\l+ GetNumAllBoundaryElements()\l+ GetNumCableElements()\l+ GetNumVertices()\l+ GetElement()\l+ GetBoundaryElement()\l+ ConstructFromMeshReader()\l+ ConstructFromMesh()\l+ GetBoundaryElementIteratorBegin()\l+ GetBoundaryElementIteratorEnd()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForBoundaryElement()\l+ CheckOutwardNormals()\l+ ConstructLinearMesh()\l+ ConstructRectangularMesh()\l+ ConstructCuboid()\l+ ConstructRegularSlabMesh()\l+ CalculateDesignatedOwnershipOfBoundaryElement()\l+ CalculateDesignatedOwnershipOfElement()\l+ CalculateMaximumNodeConnectivityPerProcess()\l+ GetHaloNodeIndices()\l+ CalculateNodeExchange()\l+ CalculateMinMaxEdgeLengths()\l# SetElementOwnerships()\l&#45; SolveElementMapping()\l&#45; SolveBoundaryElementMapping()\l&#45; save()\l&#45; load()\l}" alt="" coords="16,1002,387,1714"/>
<area shape="rect" href="$classAbstractMesh.html" title="{AbstractMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mNodes\l# mBoundaryNodes\l# mpDistributedVectorFactory\l# mNodesPermutation\l# mMeshFileBaseName\l# mMeshChangesDuringSimulation\l|+ GetNodeIteratorBegin()\l+ GetNodeIteratorEnd()\l+ AbstractMesh()\l+ ~AbstractMesh()\l+ GetNumNodes()\l+ GetNumBoundaryNodes()\l+ GetNumAllNodes()\l+ GetNode()\l+ GetNodeOrHaloNode()\l+ GetNodeFromPrePermutationIndex()\l+ ReadNodesPerProcessorFile()\l+ GetDistributedVectorFactory()\l+ SetDistributedVectorFactory()\l+ PermuteNodes()\l+ GetBoundaryNodeIteratorBegin()\l+ GetBoundaryNodeIteratorEnd()\l+ GetMeshFileBaseName()\l+ IsMeshOnDisk()\l+ rGetNodePermutation()\l+ GetVectorFromAtoB()\l+ GetDistanceBetweenNodes()\l+ GetWidth()\l+ CalculateBoundingBox()\l+ Scale()\l+ Translate()\l+ Translate()\l+ Rotate()\l+ Rotate()\l+ RotateX()\l+ RotateY()\l+ RotateZ()\l+ Rotate()\l+ RefreshMesh()\l+ IsMeshChanging()\l+ CalculateMaximumContainingElementsPerProcess()\l+ SetMeshHasChangedSinceLoading()\l# SetElementOwnerships()\l&#45; SolveNodeMapping()\l&#45; serialize()\l}" alt="" coords="32,140,371,953"/>
<area shape="rect" href="$classboost_1_1noncopyable.html" title="{noncopyable\n||}" alt="" coords="155,6,248,89"/>
</map>
