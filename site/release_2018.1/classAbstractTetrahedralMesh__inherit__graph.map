<map id="AbstractTetrahedralMesh&lt; ELEMENT_DIM, SPACE_DIM &gt;" name="AbstractTetrahedralMesh&lt; ELEMENT_DIM, SPACE_DIM &gt;">
<area shape="rect" id="node4" href="$classDistributedTetrahedralMesh.html" title="{DistributedTetrahedralMesh\l\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|&#45; mTotalNumElements\l&#45; mTotalNumBoundaryElements\l&#45; mTotalNumNodes\l&#45; mHaloNodes\l&#45; mNodesMapping\l&#45; mHaloNodesMapping\l&#45; mElementsMapping\l&#45; mBoundaryElementsMapping\l&#45; mpSpaceRegion\l&#45; mPartitioning\l|+ DistributedTetrahedralMesh()\l+ ~DistributedTetrahedralMesh()\l+ SetDistributedVectorFactory()\l+ ConstructFromMeshReader()\l+ GetNumLocalNodes()\l+ GetNumHaloNodes()\l+ GetNumLocalElements()\l+ GetNumLocalBoundaryElements()\l+ GetNumNodes()\l+ GetNumAllNodes()\land 20 more...\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l&#45; serialize()\l&#45; SetElementOwnerships()\l&#45; RegisterNode()\l&#45; RegisterHaloNode()\l&#45; RegisterElement()\l&#45; RegisterBoundaryElement()\l&#45; ComputeMeshPartitioning()\l&#45; ParMetisLibraryNodeAndElement\lPartitioning()\l&#45; ReorderNodes()\l}" alt="" coords="231,974,463,1535"/>
<area shape="rect" id="node6" href="$classDistributedTetrahedralMesh.html" title="{DistributedTetrahedralMesh\l\&lt; DIM, DIM \&gt;\n|&#45; mTotalNumElements\l&#45; mTotalNumBoundaryElements\l&#45; mTotalNumNodes\l&#45; mHaloNodes\l&#45; mNodesMapping\l&#45; mHaloNodesMapping\l&#45; mElementsMapping\l&#45; mBoundaryElementsMapping\l&#45; mpSpaceRegion\l&#45; mPartitioning\l|+ DistributedTetrahedralMesh()\l+ ~DistributedTetrahedralMesh()\l+ SetDistributedVectorFactory()\l+ ConstructFromMeshReader()\l+ GetNumLocalNodes()\l+ GetNumHaloNodes()\l+ GetNumLocalElements()\l+ GetNumLocalBoundaryElements()\l+ GetNumNodes()\l+ GetNumAllNodes()\land 20 more...\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l&#45; serialize()\l&#45; SetElementOwnerships()\l&#45; RegisterNode()\l&#45; RegisterHaloNode()\l&#45; RegisterElement()\l&#45; RegisterBoundaryElement()\l&#45; ComputeMeshPartitioning()\l&#45; ParMetisLibraryNodeAndElement\lPartitioning()\l&#45; ReorderNodes()\l}" alt="" coords="256,1601,488,2162"/>
<area shape="rect" id="node8" href="$classTetrahedralMesh.html" title="{TetrahedralMesh\&lt; ELEMENT\l_DIM, SPACE_DIM \&gt;\n|# mElementWeightedDirections\l# mElementJacobians\l# mElementInverseJacobians\l# mElementJacobianDeterminants\l# mBoundaryElementWeighted\lDirections\l# mBoundaryElementJacobian\lDeterminants\l|+ TetrahedralMesh()\l+ ConstructFromMeshReader()\l+ ReadNodesPerProcessorFile()\l+ CheckIsConforming()\l+ GetVolume()\l+ GetSurfaceArea()\l+ RefreshMesh()\l+ PermuteNodes()\l+ PermuteNodes()\l+ GetContainingElementIndex\lWithInitialGuess()\land 11 more...\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l# ExportToMesher()\l# ImportFromMesher()\l# InitialiseTriangulateIo()\l# FreeTriangulateIo()\l&#45; serialize()\l}" alt="" coords="1096,1018,1323,1491"/>
<area shape="rect" id="node20" href="$classTetrahedralMesh.html" title="{TetrahedralMesh\&lt; DIM,\l DIM \&gt;\n|# mElementWeightedDirections\l# mElementJacobians\l# mElementInverseJacobians\l# mElementJacobianDeterminants\l# mBoundaryElementWeighted\lDirections\l# mBoundaryElementJacobian\lDeterminants\l|+ TetrahedralMesh()\l+ ConstructFromMeshReader()\l+ ReadNodesPerProcessorFile()\l+ CheckIsConforming()\l+ GetVolume()\l+ GetSurfaceArea()\l+ RefreshMesh()\l+ PermuteNodes()\l+ PermuteNodes()\l+ GetContainingElementIndex\lWithInitialGuess()\land 11 more...\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l# ExportToMesher()\l# ImportFromMesher()\l# InitialiseTriangulateIo()\l# FreeTriangulateIo()\l&#45; serialize()\l}" alt="" coords="1548,1645,1775,2118"/>
<area shape="rect" id="node22" href="$classTetrahedralMesh.html" title="{TetrahedralMesh\&lt; 3, 3 \&gt;\n|# mElementWeightedDirections\l# mElementJacobians\l# mElementInverseJacobians\l# mElementJacobianDeterminants\l# mBoundaryElementWeighted\lDirections\l# mBoundaryElementJacobian\lDeterminants\l|+ TetrahedralMesh()\l+ ConstructFromMeshReader()\l+ ReadNodesPerProcessorFile()\l+ CheckIsConforming()\l+ GetVolume()\l+ GetSurfaceArea()\l+ RefreshMesh()\l+ PermuteNodes()\l+ PermuteNodes()\l+ GetContainingElementIndex\lWithInitialGuess()\land 11 more...\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l# ExportToMesher()\l# ImportFromMesher()\l# InitialiseTriangulateIo()\l# FreeTriangulateIo()\l&#45; serialize()\l}" alt="" coords="1297,1652,1524,2111"/>
<area shape="rect" id="node23" href="$classAbstractTetrahedralMesh.html" title="{AbstractTetrahedralMesh\l\&lt; ELEMENT_DIM, ELEMENT_DIM \&gt;\n|# mMeshIsLinear\l# mElements\l# mBoundaryElements\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ AbstractTetrahedralMesh()\l+ ~AbstractTetrahedralMesh()\l+ GetNumElements()\l+ GetNumLocalElements()\l+ GetNumBoundaryElements()\l+ GetNumLocalBoundaryElements()\l+ GetNumAllElements()\l+ GetNumAllBoundaryElements()\land 25 more...\l# SetElementOwnerships()\l&#45; SolveElementMapping()\l&#45; SolveBoundaryElementMapping()\l&#45; save()\l&#45; load()\l}" alt="" coords="1571,1084,1815,1425"/>
<area shape="rect" id="node24" href="$classAbstractTetrahedralMesh.html" title="{AbstractTetrahedralMesh\l\&lt; DIM, DIM \&gt;\n|# mMeshIsLinear\l# mElements\l# mBoundaryElements\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ AbstractTetrahedralMesh()\l+ ~AbstractTetrahedralMesh()\l+ GetNumElements()\l+ GetNumLocalElements()\l+ GetNumBoundaryElements()\l+ GetNumLocalBoundaryElements()\l+ GetNumAllElements()\l+ GetNumAllBoundaryElements()\land 25 more...\l# SetElementOwnerships()\l&#45; SolveElementMapping()\l&#45; SolveBoundaryElementMapping()\l&#45; save()\l&#45; load()\l}" alt="" coords="1840,1084,2072,1425"/>
<area shape="rect" id="node25" href="$classAbstractTetrahedralMesh.html" title="{AbstractTetrahedralMesh\l\&lt; SPACE_DIM, SPACE_DIM \&gt;\n|# mMeshIsLinear\l# mElements\l# mBoundaryElements\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ AbstractTetrahedralMesh()\l+ ~AbstractTetrahedralMesh()\l+ GetNumElements()\l+ GetNumLocalElements()\l+ GetNumBoundaryElements()\l+ GetNumLocalBoundaryElements()\l+ GetNumAllElements()\l+ GetNumAllBoundaryElements()\land 25 more...\l# SetElementOwnerships()\l&#45; SolveElementMapping()\l&#45; SolveBoundaryElementMapping()\l&#45; save()\l&#45; load()\l}" alt="" coords="2096,1084,2328,1425"/>
<area shape="rect" id="node2" href="$classAbstractMesh.html" title="{AbstractMesh\&lt; ELEMENT\l_DIM, SPACE_DIM \&gt;\n|# mNodes\l# mBoundaryNodes\l# mpDistributedVectorFactory\l# mNodePermutation\l# mMeshFileBaseName\l# mMeshChangesDuringSimulation\l|+ GetNodeIteratorBegin()\l+ GetNodeIteratorEnd()\l+ AbstractMesh()\l+ ~AbstractMesh()\l+ GetNumNodes()\l+ GetNumBoundaryNodes()\l+ GetNumAllNodes()\l+ GetNumNodeAttributes()\l+ GetNode()\l+ GetNodeOrHaloNode()\land 28 more...\l# SetElementOwnerships()\l# CalculateBoundingBox()\l&#45; SolveNodeMapping()\l&#45; serialize()\l}" alt="" coords="1395,133,1621,504"/>
<area shape="rect" id="node5" href="$classMixedDimensionMesh.html" title="{MixedDimensionMesh\l\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|&#45; mCableElements\l&#45; mNumCableElements\l&#45; mCableElementsMapping\l&#45; mNodeToCablesMapping\l|+ MixedDimensionMesh()\l+ ~MixedDimensionMesh()\l+ ConstructFromMeshReader()\l+ RegisterCableElement()\l+ GetNumCableElements()\l+ GetNumLocalCableElements()\l+ GetCableElement()\l+ CalculateDesignatedOwnership\lOfCableElement()\l+ GetCablesAtNode()\l+ GetCableElementIteratorBegin()\l+ GetCableElementIteratorEnd()\l&#45; serialize()\l}" alt="" coords="5,1725,232,2037"/>
<area shape="rect" id="node7" href="$classDistributedQuadraticMesh.html" title="{DistributedQuadraticMesh\l\&lt; DIM \&gt;\n||+ DistributedQuadraticMesh()\l+ ~DistributedQuadraticMesh()\l+ ConstructFromMeshReader()\l&#45; serialize()\l}" alt="" coords="187,2336,389,2472"/>
<area shape="rect" id="node9" href="$classMutableMesh.html" title="{MutableMesh\&lt; ELEMENT\l_DIM, SPACE_DIM \&gt;\n|# mDeletedElementIndices\l# mDeletedBoundaryElementIndices\l# mDeletedNodeIndices\l# mAddedNodes\l|+ MutableMesh()\l+ MutableMesh()\l+ ~MutableMesh()\l+ Clear()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumBoundaryElements()\l+ RescaleMeshFromBoundaryNode()\l+ AddNode()\l+ AddElement()\land 14 more...\l&#45; save()\l&#45; load()\l&#45; CheckIsVoronoi()\l}" alt="" coords="671,1718,909,2045"/>
<area shape="rect" id="node10" href="$classMutableMesh.html" title="{MutableMesh\&lt; ELEMENT\l_DIM, ELEMENT_DIM \&gt;\n|# mDeletedElementIndices\l# mDeletedBoundaryElementIndices\l# mDeletedNodeIndices\l# mAddedNodes\l|+ CheckIsVoronoi()\l+ MutableMesh()\l+ MutableMesh()\l+ ~MutableMesh()\l+ Clear()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumBoundaryElements()\l+ RescaleMeshFromBoundaryNode()\l+ AddNode()\land 13 more...\l&#45; save()\l&#45; load()\l&#45; CheckIsVoronoi()\l}" alt="" coords="939,2241,1177,2567"/>
<area shape="rect" id="node11" href="$classMutableMesh.html" title="{MutableMesh\&lt; 2, 2 \&gt;\n|# mDeletedElementIndices\l# mDeletedBoundaryElementIndices\l# mDeletedNodeIndices\l# mAddedNodes\l|+ CheckIsVoronoi()\l+ MutableMesh()\l+ MutableMesh()\l+ ~MutableMesh()\l+ Clear()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumBoundaryElements()\l+ RescaleMeshFromBoundaryNode()\l+ AddNode()\land 13 more...\l&#45; save()\l&#45; load()\l&#45; CheckIsVoronoi()\l}" alt="" coords="1202,2248,1440,2560"/>
<area shape="rect" id="node13" href="$classMutableMesh.html" title="{MutableMesh\&lt; DIM, DIM \&gt;\n|# mDeletedElementIndices\l# mDeletedBoundaryElementIndices\l# mDeletedNodeIndices\l# mAddedNodes\l|+ CheckIsVoronoi()\l+ MutableMesh()\l+ MutableMesh()\l+ ~MutableMesh()\l+ Clear()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumBoundaryElements()\l+ RescaleMeshFromBoundaryNode()\l+ AddNode()\land 13 more...\l&#45; save()\l&#45; load()\l&#45; CheckIsVoronoi()\l}" alt="" coords="677,2248,915,2560"/>
<area shape="rect" id="node14" href="$classMutableMesh.html" title="{MutableMesh\&lt; SPACE\l_DIM, SPACE_DIM \&gt;\n|# mDeletedElementIndices\l# mDeletedBoundaryElementIndices\l# mDeletedNodeIndices\l# mAddedNodes\l|+ CheckIsVoronoi()\l+ MutableMesh()\l+ MutableMesh()\l+ ~MutableMesh()\l+ Clear()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumBoundaryElements()\l+ RescaleMeshFromBoundaryNode()\l+ AddNode()\land 13 more...\l&#45; save()\l&#45; load()\l&#45; CheckIsVoronoi()\l}" alt="" coords="414,2241,652,2567"/>
<area shape="rect" id="node19" href="$classNonCachedTetrahedralMesh.html" title="{NonCachedTetrahedralMesh\l\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n||+ RefreshJacobianCachedData()\l+ GetJacobianForElement()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForElement()\l+ GetWeightedDirectionForBoundary\lElement()\l&#45; serialize()\l}" alt="" coords="935,1791,1171,1971"/>
<area shape="rect" id="node12" href="$classCylindrical2dMesh.html" title="{Cylindrical2dMesh\n|&#45; mWidth\l&#45; mTop\l&#45; mBottom\l&#45; mLeftOriginals\l&#45; mLeftImages\l&#45; mImageToLeftOriginalNodeMap\l&#45; mRightOriginals\l&#45; mRightImages\l&#45; mImageToRightOriginalNodeMap\l&#45; mLeftPeriodicBoundaryElement\lIndices\l&#45; mRightPeriodicBoundaryElement\lIndices\l&#45; mTopHaloNodes\l&#45; mBottomHaloNodes\l&#45; mMismatchedBoundaryElements\l|+ Cylindrical2dMesh()\l+ Cylindrical2dMesh()\l+ ~Cylindrical2dMesh()\l+ ReMesh()\l+ GetVectorFromAtoB()\l+ SetNode()\l+ GetWidth()\l+ AddNode()\l+ GetInstanceOfMismatchedBoundary\lNodes()\l&#45; UpdateTopAndBottom()\l&#45; CreateHaloNodes()\l&#45; CreateMirrorNodes()\l&#45; ReconstructCylindricalMesh()\l&#45; DeleteHaloNodes()\l&#45; CorrectNonPeriodicMesh()\l&#45; GenerateVectorsOfElements\lStraddlingPeriodicBoundaries()\l&#45; GetCorrespondingNodeIndex()\l&#45; UseTheseElementsToDecide\lMeshing()\l&#45; serialize()\l}" alt="" coords="1199,2619,1444,3224"/>
<area shape="rect" id="node15" href="$classNodesOnlyMesh.html" title="{NodesOnlyMesh\&lt; SPACE\l_DIM \&gt;\n|&#45; mHaloNodes\l&#45; mMaximumInteractionDistance\l&#45; mNodesMapping\l&#45; mHaloNodesMapping\l&#45; mIndexCounter\l&#45; mMinimumNodeDomainBoundary\lSeparation\l&#45; mDeletedGlobalNodeIndices\l&#45; mNodesToSendRight\l&#45; mNodesToSendLeft\l&#45; mLocalInitialNodes\l&#45; mMaxAddedNodeIndex\l&#45; mpBoxCollection\l&#45; mCalculateNodeNeighbours\l|+ NodesOnlyMesh()\l+ ~NodesOnlyMesh()\l+ ConstructNodesWithoutMesh()\l+ ConstructNodesWithoutMesh()\l+ ConstructNodesWithoutMesh()\l+ rGetInitiallyOwnedNodes()\l+ Clear()\l+ SolveNodeMapping()\l+ GetNodeOrHaloNode()\l+ IsOwned()\land 30 more...\l# ClearBoxCollection()\l# SetUpBoxCollection()\l# GetBoxCollection()\l&#45; save()\l&#45; load()\l&#45; GetNextAvailableIndex()\l&#45; EnlargeBoxCollection()\l&#45; IsANodeCloseToDomainBoundary()\l&#45; SetUpBoxCollection()\l&#45; RemoveDeletedNodes()\l&#45; UpdateNodeIndices()\l&#45; AddNodeWithFixedIndex()\l}" alt="" coords="414,2619,652,3224"/>
<area shape="rect" id="node16" href="$classNodesOnlyMesh.html" title="{NodesOnlyMesh\&lt; DIM \&gt;\n|&#45; mHaloNodes\l&#45; mMaximumInteractionDistance\l&#45; mNodesMapping\l&#45; mHaloNodesMapping\l&#45; mIndexCounter\l&#45; mMinimumNodeDomainBoundary\lSeparation\l&#45; mDeletedGlobalNodeIndices\l&#45; mNodesToSendRight\l&#45; mNodesToSendLeft\l&#45; mLocalInitialNodes\l&#45; mMaxAddedNodeIndex\l&#45; mpBoxCollection\l&#45; mCalculateNodeNeighbours\l|+ NodesOnlyMesh()\l+ ~NodesOnlyMesh()\l+ ConstructNodesWithoutMesh()\l+ ConstructNodesWithoutMesh()\l+ ConstructNodesWithoutMesh()\l+ rGetInitiallyOwnedNodes()\l+ Clear()\l+ SolveNodeMapping()\l+ GetNodeOrHaloNode()\l+ IsOwned()\land 30 more...\l# SetUpBoxCollection()\l# ClearBoxCollection()\l# GetBoxCollection()\l&#45; save()\l&#45; load()\l&#45; GetNextAvailableIndex()\l&#45; EnlargeBoxCollection()\l&#45; IsANodeCloseToDomainBoundary()\l&#45; SetUpBoxCollection()\l&#45; RemoveDeletedNodes()\l&#45; UpdateNodeIndices()\l&#45; AddNodeWithFixedIndex()\l}" alt="" coords="558,3289,796,3879"/>
<area shape="rect" id="node17" href="$classNodesOnlyMesh.html" title="{NodesOnlyMesh\&lt; 2 \&gt;\n|&#45; mHaloNodes\l&#45; mMaximumInteractionDistance\l&#45; mNodesMapping\l&#45; mHaloNodesMapping\l&#45; mIndexCounter\l&#45; mMinimumNodeDomainBoundary\lSeparation\l&#45; mDeletedGlobalNodeIndices\l&#45; mNodesToSendRight\l&#45; mNodesToSendLeft\l&#45; mLocalInitialNodes\l&#45; mMaxAddedNodeIndex\l&#45; mpBoxCollection\l&#45; mCalculateNodeNeighbours\l|+ NodesOnlyMesh()\l+ ~NodesOnlyMesh()\l+ ConstructNodesWithoutMesh()\l+ ConstructNodesWithoutMesh()\l+ ConstructNodesWithoutMesh()\l+ rGetInitiallyOwnedNodes()\l+ Clear()\l+ SolveNodeMapping()\l+ GetNodeOrHaloNode()\l+ IsOwned()\land 30 more...\l# SetUpBoxCollection()\l# ClearBoxCollection()\l# GetBoxCollection()\l&#45; save()\l&#45; load()\l&#45; GetNextAvailableIndex()\l&#45; EnlargeBoxCollection()\l&#45; IsANodeCloseToDomainBoundary()\l&#45; SetUpBoxCollection()\l&#45; RemoveDeletedNodes()\l&#45; UpdateNodeIndices()\l&#45; AddNodeWithFixedIndex()\l}" alt="" coords="282,3289,520,3879"/>
<area shape="rect" id="node18" href="$classCylindrical2dNodesOnlyMesh.html" title="{Cylindrical2dNodesOnlyMesh\n|&#45; mWidth\l|+ Cylindrical2dNodesOnlyMesh()\l+ SetUpBoxCollection()\l+ GetVectorFromAtoB()\l+ GetWidth()\l+ SetNode()\l+ AddNode()\l+ RefreshMesh()\l&#45; serialize()\l}" alt="" coords="294,3931,508,4111"/>
<area shape="rect" id="node21" href="$classQuadraticMesh.html" title="{QuadraticMesh\&lt; DIM \&gt;\n|# mNumVertices\l|+ QuadraticMesh()\l+ QuadraticMesh()\l+ ConstructFromMeshReader()\l+ ConstructFromLinearMeshReader()\l+ GetNumVertices()\l# CountVertices()\l# serialize()\l# ConstructLinearMesh()\l# ConstructRectangularMesh()\l# ConstructCuboid()\l# MakeNewInternalNode()\l# LookupInternalNode()\l}" alt="" coords="1542,2285,1780,2523"/>
</map>
