<area shape="rect" href="$classCardiacElectroMechanicsProblem.html" title="{CardiacElectroMechanicsProblem\&lt; DIM \&gt;\n|# mContractionModel\l# mpMonodomainProblem\l# mpCardiacMechSolver\l# mEndTime\l# mElectricsTimeStep\l# mMechanicsTimeStep\l# mNumElecTimestepsPerMechTimestep\l# mContractionModelOdeTimeStep\l# mpElectricsMesh\l# mpMechanicsMesh\l# mpMeshPair\l# mOutputDirectory\l# mDeformationOutputDirectory\l# mWriteOutput\l# mNoElectricsOutput\l# mIsWatchedLocation\l# mWatchedLocation\l# mWatchedElectricsNodeIndex\l# mWatchedMechanicsNodeIndex\l# mpWatchedLocationFile\l# mFixedNodes\l# mFibreSheetDirectionsFile\l# mFibreSheetDirectionsDefinedPerQuadraturePoint\l# mStretchesForEachMechanicsElement\l# mDeformationGradientsForEachMechanicsElement\l# mNoMechanoElectricFeedback\l# WRITE_EVERY_NTH_TIME\l|+ CardiacElectroMechanicsProblem()\l+ ~CardiacElectroMechanicsProblem()\l+ Initialise()\l+ Solve()\l+ Max()\l+ SetNoElectricsOutput()\l+ SetWatchedPosition()\l+ SetVariableFibreSheetDirectionsFile()\l+ rGetDeformedPosition()\l+ UseMechanoElectricFeedback()\l# DetermineWatchedNodes()\l# WriteWatchedLocationData()\l}" alt="" coords="3941,5232,4304,5944">
<area shape="rect" href="$classTetrahedralMesh.html" title="{TetrahedralMesh\&lt; DIM, DIM \&gt;\n|# mElementWeightedDirections\l# mElementJacobians\l# mElementInverseJacobians\l# mElementJacobianDeterminants\l# mBoundaryElementWeightedDirections\l# mBoundaryElementJacobianDeterminants\l|+ TetrahedralMesh()\l+ ConstructFromMeshReader()\l+ ReadNodesPerProcessorFile()\l+ CheckIsConforming()\l+ GetVolume()\l+ GetSurfaceArea()\l+ RefreshMesh()\l+ PermuteNodes()\l+ PermuteNodes()\l+ GetContainingElementIndex()\l+ GetContainingElementIndexWithInitialGuess()\l+ GetNearestElementIndex()\l+ GetNearestElementIndexFromTestElements()\l+ GetContainingElementIndices()\l+ Clear()\l+ CalculateBoundaryOfFlaggedRegion()\l+ GetAngleBetweenNodes()\l+ UnflagAllElements()\l+ FlagElementsNotContainingNodes()\l+ RefreshJacobianCachedData()\l+ GetJacobianForElement()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForElement()\l+ GetWeightedDirectionForBoundaryElement()\l+ EdgesBegin()\l+ EdgesEnd()\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l# ExportToMesher()\l# ImportFromMesher()\l# InitialiseTriangulateIo()\l# FreeTriangulateIo()\l&#45; serialize()\l}" alt="" coords="868,4136,1191,4866">
<area shape="rect" href="$classTetrahedralMesh.html" title="{TetrahedralMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mElementWeightedDirections\l# mElementJacobians\l# mElementInverseJacobians\l# mElementJacobianDeterminants\l# mBoundaryElementWeightedDirections\l# mBoundaryElementJacobianDeterminants\l|+ TetrahedralMesh()\l+ ConstructFromMeshReader()\l+ ReadNodesPerProcessorFile()\l+ CheckIsConforming()\l+ GetVolume()\l+ GetSurfaceArea()\l+ RefreshMesh()\l+ PermuteNodes()\l+ PermuteNodes()\l+ GetContainingElementIndex()\l+ GetContainingElementIndexWithInitialGuess()\l+ GetNearestElementIndex()\l+ GetNearestElementIndexFromTestElements()\l+ GetContainingElementIndices()\l+ Clear()\l+ CalculateBoundaryOfFlaggedRegion()\l+ GetAngleBetweenNodes()\l+ UnflagAllElements()\l+ FlagElementsNotContainingNodes()\l+ RefreshJacobianCachedData()\l+ GetJacobianForElement()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForElement()\l+ GetWeightedDirectionForBoundaryElement()\l+ EdgesBegin()\l+ EdgesEnd()\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l# ExportToMesher()\l# ImportFromMesher()\l# InitialiseTriangulateIo()\l# FreeTriangulateIo()\l&#45; serialize()\l}" alt="" coords="865,3136,1193,3866">
<area shape="rect" href="$classAbstractCardiacProblem.html" title="{AbstractCardiacProblem\&lt; ELEMENT_DIM, ELEMENT_DIM, 1 \&gt;\n|# mMeshFilename\l# mUseMatrixBasedRhsAssembly\l# mAllocatedMemoryForMesh\l# mWriteInfo\l# mPrintOutput\l# mNodesToOutput\l# mVoltageColumnId\l# mExtraVariablesId\l# mTimeColumnId\l# mNodeColumnId\l# mpCardiacTissue\l# mpBoundaryConditionsContainer\l# mpDefaultBoundaryConditionsContainer\l# mpSolver\l# mpCellFactory\l# mpMesh\l# mSolution\l# mCurrentTime\l# mpWriter\l|+ AbstractCardiacProblem()\l+ AbstractCardiacProblem()\l+ ~AbstractCardiacProblem()\l+ Initialise()\l+ SetNodesPerProcessorFilename()\l+ SetBoundaryConditionsContainer()\l+ PreSolveChecks()\l+ CreateInitialCondition()\l+ SetMesh()\l+ PrintOutput()\l+ SetWriteInfo()\l+ GetSolution()\l+ GetSolutionDistributedVector()\l+ GetCurrentTime()\l+ rGetMesh()\l+ GetTissue()\l+ Solve()\l+ CloseFilesAndPostProcess()\l+ WriteInfo()\l+ DefineWriterColumns()\l+ DefineExtraVariablesWriterColumns()\l+ WriteOneStep()\l+ WriteExtraVariablesOneStep()\l+ InitialiseWriter()\l+ SetOutputNodes()\l+ GetDataReader()\l+ UseMatrixBasedRhsAssembly()\l+ AtBeginningOfTimestep()\l+ OnEndOfTimestep()\l+ SetUpAdditionalStoppingTimes()\l+ LoadExtraArchive()\l+ GetHasBath()\l# CreateCardiacTissue()\l# CreateSolver()\l# SetElectrodes()\l&#45; save()\l&#45; load()\l&#45; SaveBoundaryConditions()\l&#45; LoadBoundaryConditions()\l}" alt="" coords="5720,2984,6131,4018">
<area shape="rect" href="$classAbstractCardiacProblem.html" title="{AbstractCardiacProblem\&lt; ELEMENT_DIM, SPACE_DIM, PROBLEM_DIM \&gt;\n|# mMeshFilename\l# mUseMatrixBasedRhsAssembly\l# mAllocatedMemoryForMesh\l# mWriteInfo\l# mPrintOutput\l# mNodesToOutput\l# mVoltageColumnId\l# mExtraVariablesId\l# mTimeColumnId\l# mNodeColumnId\l# mpCardiacTissue\l# mpBoundaryConditionsContainer\l# mpDefaultBoundaryConditionsContainer\l# mpSolver\l# mpCellFactory\l# mpMesh\l# mSolution\l# mCurrentTime\l# mpWriter\l|+ AbstractCardiacProblem()\l+ AbstractCardiacProblem()\l+ ~AbstractCardiacProblem()\l+ Initialise()\l+ SetNodesPerProcessorFilename()\l+ SetBoundaryConditionsContainer()\l+ PreSolveChecks()\l+ CreateInitialCondition()\l+ SetMesh()\l+ PrintOutput()\l+ SetWriteInfo()\l+ GetSolution()\l+ GetSolutionDistributedVector()\l+ GetCurrentTime()\l+ rGetMesh()\l+ GetTissue()\l+ Solve()\l+ CloseFilesAndPostProcess()\l+ WriteInfo()\l+ DefineWriterColumns()\l+ DefineExtraVariablesWriterColumns()\l+ WriteOneStep()\l+ WriteExtraVariablesOneStep()\l+ InitialiseWriter()\l+ SetOutputNodes()\l+ GetDataReader()\l+ UseMatrixBasedRhsAssembly()\l+ AtBeginningOfTimestep()\l+ OnEndOfTimestep()\l+ SetUpAdditionalStoppingTimes()\l+ LoadExtraArchive()\l+ GetHasBath()\l# CreateCardiacTissue()\l# CreateSolver()\l# SetElectrodes()\l&#45; save()\l&#45; load()\l&#45; SaveBoundaryConditions()\l&#45; LoadBoundaryConditions()\l}" alt="" coords="5161,1816,5639,2850">
<area shape="rect" href="$classAbstractCardiacProblem.html" title="{AbstractCardiacProblem\&lt; ELEMENT_DIM, SPACE_DIM, 1 \&gt;\n|# mMeshFilename\l# mUseMatrixBasedRhsAssembly\l# mAllocatedMemoryForMesh\l# mWriteInfo\l# mPrintOutput\l# mNodesToOutput\l# mVoltageColumnId\l# mExtraVariablesId\l# mTimeColumnId\l# mNodeColumnId\l# mpCardiacTissue\l# mpBoundaryConditionsContainer\l# mpDefaultBoundaryConditionsContainer\l# mpSolver\l# mpCellFactory\l# mpMesh\l# mSolution\l# mCurrentTime\l# mpWriter\l|+ AbstractCardiacProblem()\l+ AbstractCardiacProblem()\l+ ~AbstractCardiacProblem()\l+ Initialise()\l+ SetNodesPerProcessorFilename()\l+ SetBoundaryConditionsContainer()\l+ PreSolveChecks()\l+ CreateInitialCondition()\l+ SetMesh()\l+ PrintOutput()\l+ SetWriteInfo()\l+ GetSolution()\l+ GetSolutionDistributedVector()\l+ GetCurrentTime()\l+ rGetMesh()\l+ GetTissue()\l+ Solve()\l+ CloseFilesAndPostProcess()\l+ WriteInfo()\l+ DefineWriterColumns()\l+ DefineExtraVariablesWriterColumns()\l+ WriteOneStep()\l+ WriteExtraVariablesOneStep()\l+ InitialiseWriter()\l+ SetOutputNodes()\l+ GetDataReader()\l+ UseMatrixBasedRhsAssembly()\l+ AtBeginningOfTimestep()\l+ OnEndOfTimestep()\l+ SetUpAdditionalStoppingTimes()\l+ LoadExtraArchive()\l+ GetHasBath()\l# CreateCardiacTissue()\l# CreateSolver()\l# SetElectrodes()\l&#45; save()\l&#45; load()\l&#45; SaveBoundaryConditions()\l&#45; LoadBoundaryConditions()\l}" alt="" coords="4379,2984,4771,4018">
<area shape="rect" href="$classAbstractMesh.html" title="{AbstractMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mNodes\l# mBoundaryNodes\l# mpDistributedVectorFactory\l# mNodesPermutation\l# mMeshFileBaseName\l# mMeshChangesDuringSimulation\l|+ GetNodeIteratorBegin()\l+ GetNodeIteratorEnd()\l+ AbstractMesh()\l+ ~AbstractMesh()\l+ GetNumNodes()\l+ GetNumBoundaryNodes()\l+ GetNumAllNodes()\l+ GetNode()\l+ GetNodeOrHaloNode()\l+ GetNodeFromPrePermutationIndex()\l+ ReadNodesPerProcessorFile()\l+ GetDistributedVectorFactory()\l+ SetDistributedVectorFactory()\l+ PermuteNodes()\l+ GetBoundaryNodeIteratorBegin()\l+ GetBoundaryNodeIteratorEnd()\l+ GetMeshFileBaseName()\l+ rGetNodePermutation()\l+ GetVectorFromAtoB()\l+ GetDistanceBetweenNodes()\l+ GetWidth()\l+ CalculateBoundingBox()\l+ Scale()\l+ Translate()\l+ Translate()\l+ Rotate()\l+ Rotate()\l+ RotateX()\l+ RotateY()\l+ RotateZ()\l+ Rotate()\l+ RefreshMesh()\l+ IsMeshChanging()\l+ CalculateMaximumContainingElementsPerProcess()\l+ SetMeshHasChangedSinceLoading()\l&#45; SolveNodeMapping()\l&#45; serialize()\l}" alt="" coords="2687,901,3055,1682">
<area shape="rect" href="$classHdf5DataWriter.html" title="{Hdf5DataWriter\n|&#45; mrVectorFactory\l&#45; mDirectory\l&#45; mBaseName\l&#45; mCleanDirectory\l&#45; mIsInDefineMode\l&#45; mIsFixedDimensionSet\l&#45; mIsUnlimitedDimensionSet\l&#45; mUnlimitedDimensionName\l&#45; mUnlimitedDimensionUnit\l&#45; mFileFixedDimensionSize\l&#45; mDataFixedDimensionSize\l&#45; mLo\l&#45; mHi\l&#45; mNumberOwned\l&#45; mOffset\l&#45; mIsDataComplete\l&#45; mNeedExtend\l&#45; mIncompleteNodeIndices\l&#45; mUseMatrixForIncompleteData\l&#45; mVariables\l&#45; mFileId\l&#45; mDatasetId\l&#45; mTimeDatasetId\l&#45; mCurrentTimeStep\l&#45; mDatasetDims\l&#45; mSinglePermutation\l&#45; mDoublePermutation\l&#45; mSingleIncompleteOutputMatrix\l&#45; mDoubleIncompleteOutputMatrix\l&#45; DATASET_DIMS\l|+ Hdf5DataWriter()\l+ ~Hdf5DataWriter()\l+ DefineFixedDimension()\l+ DefineFixedDimension()\l+ DefineUnlimitedDimension()\l+ AdvanceAlongUnlimitedDimension()\l+ DefineVariable()\l+ EndDefineMode()\l+ PossiblyExtend()\l+ PutVector()\l+ PutStripedVector()\l+ PutUnlimitedVariable()\l+ Close()\l+ GetVariableByName()\l+ ApplyPermutation()\l+ DefineFixedDimensionUsingMatrix()\l&#45; CheckVariableName()\l&#45; CheckUnitsName()\l&#45; ComputeIncompleteOffset()\l}" alt="" coords="5063,850,5329,1733">
<area shape="rect" href="$classAbstractTetrahedralMesh.html" title="{AbstractTetrahedralMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mMeshIsLinear\l# mElements\l# mBoundaryElements\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ AbstractTetrahedralMesh()\l+ ~AbstractTetrahedralMesh()\l+ GetNumElements()\l+ GetNumLocalElements()\l+ GetNumBoundaryElements()\l+ GetNumAllElements()\l+ GetNumAllBoundaryElements()\l+ GetElement()\l+ GetBoundaryElement()\l+ SetElementOwnerships()\l+ ConstructFromMeshReader()\l+ ConstructFromMesh()\l+ GetBoundaryElementIteratorBegin()\l+ GetBoundaryElementIteratorEnd()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForBoundaryElement()\l+ ConstructLinearMesh()\l+ ConstructRectangularMesh()\l+ ConstructCuboid()\l+ ConstructRegularSlabMesh()\l+ CalculateDesignatedOwnershipOfBoundaryElement()\l+ CalculateDesignatedOwnershipOfElement()\l+ CalculateMaximumNodeConnectivityPerProcess()\l+ GetHaloNodeIndices()\l&#45; SolveElementMapping()\l&#45; SolveBoundaryElementMapping()\l&#45; save()\l&#45; load()\l}" alt="" coords="1579,2028,1960,2638">
<area shape="rect" href="$classAbstractUntemplatedCardiacProblem.html" title="{AbstractUntemplatedCardiacProblem\n||+ ~AbstractUntemplatedCardiacProblem()\l}" alt="" coords="3617,1250,3913,1333">
<area shape="rect" href="$classAbstractCardiacTissue.html" title="{AbstractCardiacTissue\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mpMesh\l# mpIntracellularConductivityTensors\l# mCellsDistributed\l# mIionicCacheReplicated\l# mIntracellularStimulusCacheReplicated\l# mpConfig\l# mDoCacheReplication\l# mpDistributedVectorFactory\l# mMeshUnarchived\l# mFibreFilePathNoExtension\l|+ AbstractCardiacTissue()\l+ AbstractCardiacTissue()\l+ ~AbstractCardiacTissue()\l+ MergeCells()\l+ SetCacheReplication()\l+ GetDoCacheReplication()\l+ rGetIntracellularConductivityTensor()\l+ GetCardiacCell()\l+ SolveCellSystems()\l+ rGetIionicCacheReplicated()\l+ rGetIntracellularStimulusCacheReplicated()\l+ UpdateCaches()\l+ ReplicateCaches()\l+ rGetCellsDistributed()\l+ pGetMesh()\l+ SaveCardiacCells()\l+ LoadCardiacCells()\l&#45; save()\l&#45; load()\l&#45; CreateIntracellularConductivityTensor()\l}" alt="" coords="3129,1012,3492,1572">
<area shape="rect" href="$classDistributedVectorFactory.html" title="{DistributedVectorFactory\n|&#45; mLo\l&#45; mHi\l&#45; mProblemSize\l&#45; mNumProcs\l&#45; mPetscStatusKnown\l&#45; mpOriginalFactory\l&#45; msCheckNumberOfProcessesOnLoad\l|+ DistributedVectorFactory()\l+ DistributedVectorFactory()\l+ DistributedVectorFactory()\l+ DistributedVectorFactory()\l+ ~DistributedVectorFactory()\l+ CreateVec()\l+ CreateVec()\l+ CreateDistributedVector()\l+ IsGlobalIndexLocal()\l+ GetLocalOwnership()\l+ GetHigh()\l+ GetLow()\l+ GetProblemSize()\l+ GetNumProcs()\l+ GetOriginalFactory()\l+ SetFromFactory()\l+ SetCheckNumberOfProcessesOnLoad()\l+ CheckNumberOfProcessesOnLoad()\l&#45; CheckForPetsc()\l&#45; CalculateOwnership()\l&#45; serialize()\l}" alt="" coords="3879,208,4167,733">
<area shape="rect" href="$classMonodomainProblem.html" title="{MonodomainProblem\&lt; DIM \&gt;\n|# mpMonodomainTissue\l|+ CreateCardiacTissue()\l+ CreateSolver()\l+ MonodomainProblem()\l+ MonodomainProblem()\l+ ~MonodomainProblem()\l+ GetMonodomainTissue()\l+ WriteInfo()\l+ DefineWriterColumns()\l+ WriteOneStep()\l&#45; serialize()\l}" alt="" coords="3811,4930,4021,5168">
<area shape="rect" href="$classMonodomainTissue.html" title="{MonodomainTissue\&lt; ELEMENT_DIM, ELEMENT_DIM \&gt;\n||+ MonodomainTissue()\l+ MonodomainTissue()\l&#45; serialize()\l}" alt="" coords="3243,3442,3605,3560">
<area shape="rect" href="$classMonodomainTissue.html" title="{MonodomainTissue\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n||+ MonodomainTissue()\l+ MonodomainTissue()\l&#45; serialize()\l}" alt="" coords="3104,2274,3448,2392">
<area shape="rect" href="$classMonodomainProblem.html" title="{MonodomainProblem\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mpMonodomainTissue\l|+ CreateCardiacTissue()\l+ CreateSolver()\l+ MonodomainProblem()\l+ MonodomainProblem()\l+ ~MonodomainProblem()\l+ GetMonodomainTissue()\l+ WriteInfo()\l+ DefineWriterColumns()\l+ WriteOneStep()\l&#45; serialize()\l}" alt="" coords="4003,4382,4360,4620">
