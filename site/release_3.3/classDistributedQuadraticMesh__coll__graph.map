<map id="G" name="G">
<area shape="rect" id="node2" href="$classDistributedTetrahedralMesh.html" title="{DistributedTetrahedralMesh\&lt; DIM, DIM \&gt;\n|&#45; mTotalNumElements\l&#45; mTotalNumBoundaryElements\l&#45; mTotalNumNodes\l&#45; mHaloNodes\l&#45; mNodesMapping\l&#45; mHaloNodesMapping\l&#45; mElementsMapping\l&#45; mBoundaryElementsMapping\l&#45; mpSpaceRegion\l&#45; mMetisPartitioning\l|+ DistributedTetrahedralMesh()\l+ ~DistributedTetrahedralMesh()\l+ SetDistributedVectorFactory()\l+ ConstructFromMeshReader()\l+ GetNumLocalNodes()\l+ GetNumHaloNodes()\l+ GetNumLocalElements()\l+ GetNumLocalBoundaryElements()\l+ GetNumNodes()\l+ GetNumAllNodes()\l+ GetNumElements()\l+ GetPartitionType()\l+ GetNumBoundaryElements()\l+ GetHaloNodeIndices()\l+ SetProcessRegion()\l+ GetProcessRegion()\l+ CalculateDesignatedOwnershipOfElement()\l+ CalculateDesignatedOwnershipOfBoundaryElement()\l+ ConstructLinearMesh()\l+ ConstructRectangularMesh()\l+ ConstructCuboid()\l+ Scale()\l+ GetNodeOrHaloNode()\l+ CalculateBoundingBox()\l+ GetNearestNodeIndex()\l+ CalculateMinMaxEdgeLengths()\l+ GetHaloNodeIteratorBegin()\l+ GetHaloNodeIteratorEnd()\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l&#45; serialize()\l&#45; SetElementOwnerships()\l&#45; RegisterNode()\l&#45; RegisterHaloNode()\l&#45; RegisterElement()\l&#45; RegisterBoundaryElement()\l&#45; ComputeMeshPartitioning()\l&#45; ParMetisLibraryNodeAndElementPartitioning()\l&#45; ReorderNodes()\l}" alt="" coords="361,4003,710,4989"/>
<area shape="rect" id="node4" href="$classAbstractTetrahedralMesh.html" title="{AbstractTetrahedralMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mMeshIsLinear\l# mElements\l# mBoundaryElements\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ AbstractTetrahedralMesh()\l+ ~AbstractTetrahedralMesh()\l+ GetNumElements()\l+ GetNumLocalElements()\l+ GetNumBoundaryElements()\l+ GetNumLocalBoundaryElements()\l+ GetNumAllElements()\l+ GetNumAllBoundaryElements()\l+ GetNumCableElements()\l+ GetNumVertices()\l+ GetMaximumNodeIndex()\l+ GetElement()\l+ GetBoundaryElement()\l+ ConstructFromMeshReader()\l+ ConstructFromMesh()\l+ GetBoundaryElementIteratorBegin()\l+ GetBoundaryElementIteratorEnd()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForBoundaryElement()\l+ CheckOutwardNormals()\l+ ConstructLinearMesh()\l+ ConstructRectangularMesh()\l+ ConstructCuboid()\l+ ConstructRegularSlabMesh()\l+ CalculateDesignatedOwnershipOfBoundaryElement()\l+ CalculateDesignatedOwnershipOfElement()\l+ CalculateMaximumNodeConnectivityPerProcess()\l+ GetHaloNodeIndices()\l+ CalculateNodeExchange()\l+ CalculateMinMaxEdgeLengths()\l+ GetContainingElementIndex()\l+ GetNearestElementIndexFromTestElements()\l# SetElementOwnerships()\l&#45; SolveElementMapping()\l&#45; SolveBoundaryElementMapping()\l&#45; save()\l&#45; load()\l}" alt="" coords="908,1990,1276,2826"/>
<area shape="rect" id="node38" href="$classDistributedTetrahedralMesh.html" title="{DistributedTetrahedralMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|&#45; mTotalNumElements\l&#45; mTotalNumBoundaryElements\l&#45; mTotalNumNodes\l&#45; mHaloNodes\l&#45; mNodesMapping\l&#45; mHaloNodesMapping\l&#45; mElementsMapping\l&#45; mBoundaryElementsMapping\l&#45; mpSpaceRegion\l&#45; mMetisPartitioning\l|+ DistributedTetrahedralMesh()\l+ ~DistributedTetrahedralMesh()\l+ SetDistributedVectorFactory()\l+ ConstructFromMeshReader()\l+ GetNumLocalNodes()\l+ GetNumHaloNodes()\l+ GetNumLocalElements()\l+ GetNumLocalBoundaryElements()\l+ GetNumNodes()\l+ GetNumAllNodes()\l+ GetNumElements()\l+ GetPartitionType()\l+ GetNumBoundaryElements()\l+ GetHaloNodeIndices()\l+ SetProcessRegion()\l+ GetProcessRegion()\l+ CalculateDesignatedOwnershipOfElement()\l+ CalculateDesignatedOwnershipOfBoundaryElement()\l+ ConstructLinearMesh()\l+ ConstructRectangularMesh()\l+ ConstructCuboid()\l+ Scale()\l+ GetNodeOrHaloNode()\l+ CalculateBoundingBox()\l+ GetNearestNodeIndex()\l+ CalculateMinMaxEdgeLengths()\l+ GetHaloNodeIteratorBegin()\l+ GetHaloNodeIteratorEnd()\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l&#45; serialize()\l&#45; SetElementOwnerships()\l&#45; RegisterNode()\l&#45; RegisterHaloNode()\l&#45; RegisterElement()\l&#45; RegisterBoundaryElement()\l&#45; ComputeMeshPartitioning()\l&#45; ParMetisLibraryNodeAndElementPartitioning()\l&#45; ReorderNodes()\l}" alt="" coords="344,2950,728,3935"/>
<area shape="rect" id="node6" href="$classAbstractMesh.html" title="{AbstractMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mNodes\l# mBoundaryNodes\l# mpDistributedVectorFactory\l# mNodePermutation\l# mMeshFileBaseName\l# mMeshChangesDuringSimulation\l|+ GetNodeIteratorBegin()\l+ GetNodeIteratorEnd()\l+ AbstractMesh()\l+ ~AbstractMesh()\l+ GetNumNodes()\l+ GetNumBoundaryNodes()\l+ GetNumAllNodes()\l+ GetNumNodeAttributes()\l+ GetNode()\l+ GetNodeOrHaloNode()\l+ GetNodeFromPrePermutationIndex()\l+ ReadNodesPerProcessorFile()\l+ GetDistributedVectorFactory()\l+ SetDistributedVectorFactory()\l+ PermuteNodes()\l+ GetBoundaryNodeIteratorBegin()\l+ GetBoundaryNodeIteratorEnd()\l+ GetMeshFileBaseName()\l+ IsMeshOnDisk()\l+ rGetNodePermutation()\l+ GetVectorFromAtoB()\l+ GetDistanceBetweenNodes()\l+ GetWidth()\l+ CalculateBoundingBox()\l+ GetNearestNodeIndex()\l+ Scale()\l+ Translate()\l+ Translate()\l+ Rotate()\l+ Rotate()\l+ RotateX()\l+ RotateY()\l+ RotateZ()\l+ Rotate()\l+ RefreshMesh()\l+ IsMeshChanging()\l+ CalculateMaximumContainingElementsPerProcess()\l+ SetMeshHasChangedSinceLoading()\l# SetElementOwnerships()\l# CalculateBoundingBox()\l&#45; SolveNodeMapping()\l&#45; serialize()\l}" alt="" coords="1290,937,1637,1885"/>
<area shape="rect" id="node8" href="$classboost_1_1noncopyable.html" title="{boost::noncopyable\n||}" alt="" coords="1350,490,1489,579"/>
<area shape="rect" id="node10" href="$classDistributedVectorFactory.html" title="{DistributedVectorFactory\n|&#45; mLo\l&#45; mHi\l&#45; mProblemSize\l&#45; mNumProcs\l&#45; mPetscStatusKnown\l&#45; mGlobalLows\l&#45; mpOriginalFactory\l&#45; msCheckNumberOfProcessesOnLoad\l|+ DistributedVectorFactory()\l+ DistributedVectorFactory()\l+ DistributedVectorFactory()\l+ DistributedVectorFactory()\l+ ~DistributedVectorFactory()\l+ CreateVec()\l+ CreateVec()\l+ CreateDistributedVector()\l+ IsGlobalIndexLocal()\l+ GetLocalOwnership()\l+ GetHigh()\l+ GetLow()\l+ GetProblemSize()\l+ GetNumProcs()\l+ GetOriginalFactory()\l+ SetOriginalFactory()\l+ SetFromFactory()\l+ rGetGlobalLows()\l+ SetCheckNumberOfProcessesOnLoad()\l+ CheckNumberOfProcessesOnLoad()\l&#45; CheckForPetsc()\l&#45; CalculateOwnership()\l&#45; serialize()\l}" alt="" coords="758,219,1030,850"/>
<area shape="rect" id="node15" href="$classbool.html" title="{bool\n||}" alt="" coords="1594,6,1642,95"/>
<area shape="rect" id="node17" href="$classunsigned.html" title="{unsigned\n||}" alt="" coords="154,6,232,95"/>
</map>
