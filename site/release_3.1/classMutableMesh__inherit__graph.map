<map id="G" name="G">
<area shape="rect" href="$classMutableMesh.html" title="{MutableMesh\&lt; ELEMENT_DIM, ELEMENT_DIM \&gt;\n|# mDeletedElementIndices\l# mDeletedBoundaryElementIndices\l# mDeletedNodeIndices\l# mAddedNodes\l|+ CheckIsVoronoi()\l+ MutableMesh()\l+ MutableMesh()\l+ ~MutableMesh()\l+ Clear()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumBoundaryElements()\l+ RescaleMeshFromBoundaryNode()\l+ AddNode()\l+ SetNode()\l+ MoveMergeNode()\l+ DeleteNode()\l+ DeleteNodePriorToReMesh()\l+ RefineElement()\l+ DeleteBoundaryNodeAt()\l+ ReIndex()\l+ ReMesh()\l+ ReMesh()\l&#45; serialize()\l&#45; CheckIsVoronoi()\l}" alt="" coords="5,3109,325,3584"/>
<area shape="rect" href="$classMutableMesh.html" title="{MutableMesh\&lt; 2, 2 \&gt;\n|# mDeletedElementIndices\l# mDeletedBoundaryElementIndices\l# mDeletedNodeIndices\l# mAddedNodes\l|+ CheckIsVoronoi()\l+ MutableMesh()\l+ MutableMesh()\l+ ~MutableMesh()\l+ Clear()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumBoundaryElements()\l+ RescaleMeshFromBoundaryNode()\l+ AddNode()\l+ SetNode()\l+ MoveMergeNode()\l+ DeleteNode()\l+ DeleteNodePriorToReMesh()\l+ RefineElement()\l+ DeleteBoundaryNodeAt()\l+ ReIndex()\l+ ReMesh()\l+ ReMesh()\l&#45; serialize()\l&#45; CheckIsVoronoi()\l}" alt="" coords="349,3109,587,3584"/>
<area shape="rect" href="$classMutableMesh.html" title="{MutableMesh\&lt; DIM, DIM \&gt;\n|# mDeletedElementIndices\l# mDeletedBoundaryElementIndices\l# mDeletedNodeIndices\l# mAddedNodes\l|+ CheckIsVoronoi()\l+ MutableMesh()\l+ MutableMesh()\l+ ~MutableMesh()\l+ Clear()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumBoundaryElements()\l+ RescaleMeshFromBoundaryNode()\l+ AddNode()\l+ SetNode()\l+ MoveMergeNode()\l+ DeleteNode()\l+ DeleteNodePriorToReMesh()\l+ RefineElement()\l+ DeleteBoundaryNodeAt()\l+ ReIndex()\l+ ReMesh()\l+ ReMesh()\l&#45; serialize()\l&#45; CheckIsVoronoi()\l}" alt="" coords="611,3109,848,3584"/>
<area shape="rect" href="$classMutableMesh.html" title="{MutableMesh\&lt; SPACE_DIM, SPACE_DIM \&gt;\n|# mDeletedElementIndices\l# mDeletedBoundaryElementIndices\l# mDeletedNodeIndices\l# mAddedNodes\l|+ CheckIsVoronoi()\l+ MutableMesh()\l+ MutableMesh()\l+ ~MutableMesh()\l+ Clear()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumBoundaryElements()\l+ RescaleMeshFromBoundaryNode()\l+ AddNode()\l+ SetNode()\l+ MoveMergeNode()\l+ DeleteNode()\l+ DeleteNodePriorToReMesh()\l+ RefineElement()\l+ DeleteBoundaryNodeAt()\l+ ReIndex()\l+ ReMesh()\l+ ReMesh()\l&#45; serialize()\l&#45; CheckIsVoronoi()\l}" alt="" coords="872,3109,1160,3584"/>
<area shape="rect" href="$classTetrahedralMesh.html" title="{TetrahedralMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mElementWeightedDirections\l# mElementJacobians\l# mElementInverseJacobians\l# mElementJacobianDeterminants\l# mBoundaryElementWeightedDirections\l# mBoundaryElementJacobianDeterminants\l|+ TetrahedralMesh()\l+ ConstructFromMeshReader()\l+ ReadNodesPerProcessorFile()\l+ CheckIsConforming()\l+ GetVolume()\l+ GetSurfaceArea()\l+ RefreshMesh()\l+ PermuteNodes()\l+ PermuteNodes()\l+ GetContainingElementIndex()\l+ GetContainingElementIndexWithInitialGuess()\l+ GetNearestElementIndex()\l+ GetNearestElementIndexFromTestElements()\l+ GetContainingElementIndices()\l+ Clear()\l+ CalculateBoundaryOfFlaggedRegion()\l+ GetAngleBetweenNodes()\l+ UnflagAllElements()\l+ FlagElementsNotContainingNodes()\l+ RefreshJacobianCachedData()\l+ GetJacobianForElement()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForElement()\l+ GetWeightedDirectionForBoundaryElement()\l+ EdgesBegin()\l+ EdgesEnd()\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l# ExportToMesher()\l# ImportFromMesher()\l# InitialiseTriangulateIo()\l# FreeTriangulateIo()\l&#45; serialize()\l}" alt="" coords="483,1771,805,2501"/>
<area shape="rect" href="$classAbstractTetrahedralMesh.html" title="{AbstractTetrahedralMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mMeshIsLinear\l# mElements\l# mBoundaryElements\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ AbstractTetrahedralMesh()\l+ ~AbstractTetrahedralMesh()\l+ GetNumElements()\l+ GetNumLocalElements()\l+ GetNumBoundaryElements()\l+ GetNumLocalBoundaryElements()\l+ GetNumAllElements()\l+ GetNumAllBoundaryElements()\l+ GetNumCableElements()\l+ GetNumVertices()\l+ GetElement()\l+ GetBoundaryElement()\l+ ConstructFromMeshReader()\l+ ConstructFromMesh()\l+ GetBoundaryElementIteratorBegin()\l+ GetBoundaryElementIteratorEnd()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForBoundaryElement()\l+ CheckOutwardNormals()\l+ ConstructLinearMesh()\l+ ConstructRectangularMesh()\l+ ConstructCuboid()\l+ ConstructRegularSlabMesh()\l+ CalculateDesignatedOwnershipOfBoundaryElement()\l+ CalculateDesignatedOwnershipOfElement()\l+ CalculateMaximumNodeConnectivityPerProcess()\l+ GetHaloNodeIndices()\l+ CalculateNodeExchange()\l+ CalculateMinMaxEdgeLengths()\l# SetElementOwnerships()\l&#45; SolveElementMapping()\l&#45; SolveBoundaryElementMapping()\l&#45; save()\l&#45; load()\l}" alt="" coords="459,1008,829,1720"/>
<area shape="rect" href="$classAbstractMesh.html" title="{AbstractMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mNodes\l# mBoundaryNodes\l# mpDistributedVectorFactory\l# mNodesPermutation\l# mMeshFileBaseName\l# mMeshChangesDuringSimulation\l|+ GetNodeIteratorBegin()\l+ GetNodeIteratorEnd()\l+ AbstractMesh()\l+ ~AbstractMesh()\l+ GetNumNodes()\l+ GetNumBoundaryNodes()\l+ GetNumAllNodes()\l+ GetNode()\l+ GetNodeOrHaloNode()\l+ GetNodeFromPrePermutationIndex()\l+ ReadNodesPerProcessorFile()\l+ GetDistributedVectorFactory()\l+ SetDistributedVectorFactory()\l+ PermuteNodes()\l+ GetBoundaryNodeIteratorBegin()\l+ GetBoundaryNodeIteratorEnd()\l+ GetMeshFileBaseName()\l+ IsMeshOnDisk()\l+ rGetNodePermutation()\l+ GetVectorFromAtoB()\l+ GetDistanceBetweenNodes()\l+ GetWidth()\l+ CalculateBoundingBox()\l+ Scale()\l+ Translate()\l+ Translate()\l+ Rotate()\l+ Rotate()\l+ RotateX()\l+ RotateY()\l+ RotateZ()\l+ Rotate()\l+ RefreshMesh()\l+ IsMeshChanging()\l+ CalculateMaximumContainingElementsPerProcess()\l+ SetMeshHasChangedSinceLoading()\l# SetElementOwnerships()\l&#45; SolveNodeMapping()\l&#45; serialize()\l}" alt="" coords="475,143,813,956"/>
<area shape="rect" href="$classboost_1_1noncopyable.html" title="{noncopyable\n||}" alt="" coords="597,7,691,89"/>
<area shape="rect" href="$classCylindrical2dMesh.html" title="{Cylindrical2dMesh\n|&#45; mWidth\l&#45; mTop\l&#45; mBottom\l&#45; mLeftOriginals\l&#45; mLeftImages\l&#45; mImageToLeftOriginalNodeMap\l&#45; mRightOriginals\l&#45; mRightImages\l&#45; mImageToRightOriginalNodeMap\l&#45; mLeftPeriodicBoundaryElementIndices\l&#45; mRightPeriodicBoundaryElementIndices\l&#45; mTopHaloNodes\l&#45; mBottomHaloNodes\l&#45; mMismatchedBoundaryElements\l|+ Cylindrical2dMesh()\l+ Cylindrical2dMesh()\l+ ~Cylindrical2dMesh()\l+ ReMesh()\l+ GetVectorFromAtoB()\l+ SetNode()\l+ GetWidth()\l+ AddNode()\l+ GetInstanceOfMismatchedBoundaryNodes()\l&#45; UpdateTopAndBottom()\l&#45; CreateHaloNodes()\l&#45; CreateMirrorNodes()\l&#45; ReconstructCylindricalMesh()\l&#45; DeleteHaloNodes()\l&#45; CorrectNonPeriodicMesh()\l&#45; GenerateVectorsOfElementsStraddlingPeriodicBoundaries()\l&#45; GetCorrespondingNodeIndex()\l&#45; UseTheseElementsToDecideMeshing()\l&#45; serialize()\l}" alt="" coords="281,3635,655,4245"/>
<area shape="rect" href="$classNodesOnlyMesh.html" title="{NodesOnlyMesh\&lt; SPACE_DIM \&gt;\n|&#45; mCellRadii\l&#45; mpBoxCollection\l&#45; mMaximumInteractionDistance\l|+ NodesOnlyMesh()\l+ ~NodesOnlyMesh()\l+ ConstructNodesWithoutMesh()\l+ ConstructNodesWithoutMesh()\l+ Clear()\l+ GetCellRadius()\l+ SetCellRadius()\l+ GetBoxCollection()\l+ ClearBoxCollection()\l+ SetUpBoxCollection()\l+ SetMaximumInteractionDistance()\l+ CalculateNodePairs()\l+ ReMesh()\l+ AddNode()\l+ DeleteNode()\l&#45; serialize()\l}" alt="" coords="823,3755,1055,4125"/>
<area shape="rect" href="$classNodesOnlyMesh.html" title="{NodesOnlyMesh\&lt; DIM \&gt;\n|&#45; mCellRadii\l&#45; mpBoxCollection\l&#45; mMaximumInteractionDistance\l|+ NodesOnlyMesh()\l+ ~NodesOnlyMesh()\l+ ConstructNodesWithoutMesh()\l+ ConstructNodesWithoutMesh()\l+ Clear()\l+ GetCellRadius()\l+ SetCellRadius()\l+ GetBoxCollection()\l+ ClearBoxCollection()\l+ SetUpBoxCollection()\l+ SetMaximumInteractionDistance()\l+ CalculateNodePairs()\l+ ReMesh()\l+ AddNode()\l+ DeleteNode()\l&#45; serialize()\l}" alt="" coords="920,4311,1152,4681"/>
</map>
