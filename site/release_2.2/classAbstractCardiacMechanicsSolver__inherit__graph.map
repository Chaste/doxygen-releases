<area shape="rect" href="$classExplicitCardiacMechanicsSolver.html" title="{ExplicitCardiacMechanicsSolver\&lt; DIM \&gt;\n||+ ExplicitCardiacMechanicsSolver()\l+ ~ExplicitCardiacMechanicsSolver()\l+ Solve()\l&#45; IsImplicitSolver()\l&#45; GetActiveTensionAndTensionDerivs()\l}" alt="" coords="5,3036,280,3188">
<area shape="rect" href="$classImplicitCardiacMechanicsSolver.html" title="{ImplicitCardiacMechanicsSolver\&lt; DIM \&gt;\n|&#45; mStretchesLastTimeStep\l|+ ImplicitCardiacMechanicsSolver()\l+ ~ImplicitCardiacMechanicsSolver()\l+ rGetFibreStretches()\l+ Solve()\l&#45; IsImplicitSolver()\l&#45; GetActiveTensionAndTensionDerivs()\l}" alt="" coords="304,3028,579,3196">
<area shape="rect" href="$classNonlinearElasticitySolver.html" title="{NonlinearElasticitySolver\&lt; DIM \&gt;\n|# mMaterialLaws\l# mPressures\l# NUM_VERTICES_PER_ELEMENT\l# NUM_NODES_PER_ELEMENT\l# STENCIL_SIZE\l# NUM_NODES_PER_BOUNDARY_ELEMENT\l# BOUNDARY_STENCIL_SIZE\l|+ NonlinearElasticitySolver()\l+ NonlinearElasticitySolver()\l+ ~NonlinearElasticitySolver()\l+ rGetPressures()\l# AssembleOnElement()\l# AssembleOnBoundaryElement()\l# FormInitialGuess()\l# AssembleSystem()\l# ComputeStressAndStressDerivative()\l}" alt="" coords="144,2095,440,2415">
<area shape="rect" href="$classAbstractNonlinearElasticitySolver.html" title="{AbstractNonlinearElasticitySolver\&lt; INCOMPRESSIBLE, DIM \&gt;\n|# mpQuadMesh\l# mBoundaryElements\l# mpQuadratureRule\l# mpBoundaryQuadratureRule\l# mKspAbsoluteTol\l# mNumDofs\l# mpLinearSystem\l# mpPreconditionMatrixLinearSystem\l# mBodyForce\l# mDensity\l# mFixedNodes\l# mFixedNodeDisplacements\l# mWriteOutput\l# mOutputDirectory\l# mpOutputFileHandler\l# mWriteOutputEachNewtonIteration\l# mCurrentSolution\l# dTdE\l# mNumNewtonIterations\l# mDeformedPosition\l# mSurfaceTractions\l# mpBodyForceFunction\l# mpTractionBoundaryConditionFunction\l# mUsingBodyForceFunction\l# mUsingTractionBoundaryConditionFunction\l# mCurrentTime\l# MAX_NEWTON_ABS_TOL\l# MIN_NEWTON_ABS_TOL\l# NEWTON_REL_TOL\l|+ AbstractNonlinearElasticitySolver()\l+ ~AbstractNonlinearElasticitySolver()\l+ Solve()\l+ WriteCurrentDeformation()\l+ GetNumNewtonIterations()\l+ SetFunctionalBodyForce()\l+ SetWriteOutput()\l+ SetWriteOutputEachNewtonIteration()\l+ SetKspAbsoluteTolerance()\l+ rGetCurrentSolution()\l+ SetSurfaceTractionBoundaryConditions()\l+ SetFunctionalTractionBoundaryCondition()\l+ rGetDeformedPosition()\l+ SetCurrentTime()\l+ CreateCmguiOutput()\l# AssembleSystem()\l# Initialise()\l# AllocateMatrixMemory()\l# ApplyBoundaryConditions()\l# ComputeResidualAndGetNorm()\l# CalculateResidualNorm()\l# VectorSum()\l# PrintLineSearchResult()\l# TakeNewtonStep()\l# UpdateSolutionUsingLineSearch()\l# PostNewtonStep()\l}" alt="" coords="89,1058,495,2042">
<area shape="rect" href="$classAbstractNonlinearElasticitySolver.html" title="{AbstractNonlinearElasticitySolver\&lt; COMPRESSIBILITY_TYPE, DIM \&gt;\n|# mpQuadMesh\l# mBoundaryElements\l# mpQuadratureRule\l# mpBoundaryQuadratureRule\l# mKspAbsoluteTol\l# mNumDofs\l# mpLinearSystem\l# mpPreconditionMatrixLinearSystem\l# mBodyForce\l# mDensity\l# mFixedNodes\l# mFixedNodeDisplacements\l# mWriteOutput\l# mOutputDirectory\l# mpOutputFileHandler\l# mWriteOutputEachNewtonIteration\l# mCurrentSolution\l# dTdE\l# mNumNewtonIterations\l# mDeformedPosition\l# mSurfaceTractions\l# mpBodyForceFunction\l# mpTractionBoundaryConditionFunction\l# mUsingBodyForceFunction\l# mUsingTractionBoundaryConditionFunction\l# mCurrentTime\l# MAX_NEWTON_ABS_TOL\l# MIN_NEWTON_ABS_TOL\l# NEWTON_REL_TOL\l|+ AbstractNonlinearElasticitySolver()\l+ ~AbstractNonlinearElasticitySolver()\l+ Solve()\l+ WriteCurrentDeformation()\l+ GetNumNewtonIterations()\l+ SetFunctionalBodyForce()\l+ SetWriteOutput()\l+ SetWriteOutputEachNewtonIteration()\l+ SetKspAbsoluteTolerance()\l+ rGetCurrentSolution()\l+ SetSurfaceTractionBoundaryConditions()\l+ SetFunctionalTractionBoundaryCondition()\l+ rGetDeformedPosition()\l+ SetCurrentTime()\l+ CreateCmguiOutput()\l# AssembleSystem()\l# Initialise()\l# AllocateMatrixMemory()\l# ApplyBoundaryConditions()\l# ComputeResidualAndGetNorm()\l# CalculateResidualNorm()\l# VectorSum()\l# PrintLineSearchResult()\l# TakeNewtonStep()\l# UpdateSolutionUsingLineSearch()\l# PostNewtonStep()\l}" alt="" coords="71,7,513,991">
