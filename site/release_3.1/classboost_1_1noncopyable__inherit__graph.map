<map id="G" name="G">
<area shape="rect" href="$classAbstractCardiacTissue.html" title="{AbstractCardiacTissue\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mpMesh\l# mpIntracellularConductivityTensors\l# mCellsDistributed\l# mPurkinjeCellsDistributed\l# mIionicCacheReplicated\l# mPurkinjeIionicCacheReplicated\l# mIntracellularStimulusCacheReplicated\l# mPurkinjeIntracellularStimulusCacheReplicated\l# mpConfig\l# mpDistributedVectorFactory\l# mFibreFilePathNoExtension\l# mpConductivityModifier\l# mHasPurkinje\l# mDoCacheReplication\l# mMeshUnarchived\l# mExchangeHalos\l# mHaloNodes\l# mHaloCellsDistributed\l# mHaloGlobalToLocalIndexMap\l# mNodesToSendPerProcess\l# mNodesToReceivePerProcess\l|+ AbstractCardiacTissue()\l+ AbstractCardiacTissue()\l+ ~AbstractCardiacTissue()\l+ HasPurkinje()\l+ SetCacheReplication()\l+ GetDoCacheReplication()\l+ rGetIntracellularConductivityTensor()\l+ rGetExtracellularConductivityTensor()\l+ GetCardiacCell()\l+ GetPurkinjeCell()\l+ GetCardiacCellOrHaloCell()\l+ SolveCellSystems()\l+ rGetIionicCacheReplicated()\l+ rGetIntracellularStimulusCacheReplicated()\l+ rGetPurkinjeIionicCacheReplicated()\l+ rGetPurkinjeIntracellularStimulusCacheReplicated()\l+ UpdateCaches()\l+ UpdatePurkinjeCaches()\l+ ReplicateCaches()\l+ rGetCellsDistributed()\l+ rGetPurkinjeCellsDistributed()\l+ pGetMesh()\l+ SetConductivityModifier()\l+ SaveCardiacCells()\l+ LoadCardiacCells()\l# CalculateHaloNodesFromNodeExchange()\l# SetUpHaloCells()\l&#45; save()\l&#45; load()\l&#45; CreateIntracellularConductivityTensor()\l}" alt="" coords="353,141,713,1058"/>
<area shape="rect" href="$classAbstractCardiacTissue.html" title="{AbstractCardiacTissue\&lt; SPACE_DIM \&gt;\n|# mpMesh\l# mpIntracellularConductivityTensors\l# mCellsDistributed\l# mPurkinjeCellsDistributed\l# mIionicCacheReplicated\l# mPurkinjeIionicCacheReplicated\l# mIntracellularStimulusCacheReplicated\l# mPurkinjeIntracellularStimulusCacheReplicated\l# mpConfig\l# mpDistributedVectorFactory\l# mFibreFilePathNoExtension\l# mpConductivityModifier\l# mHasPurkinje\l# mDoCacheReplication\l# mMeshUnarchived\l# mExchangeHalos\l# mHaloNodes\l# mHaloCellsDistributed\l# mHaloGlobalToLocalIndexMap\l# mNodesToSendPerProcess\l# mNodesToReceivePerProcess\l|+ AbstractCardiacTissue()\l+ AbstractCardiacTissue()\l+ ~AbstractCardiacTissue()\l+ HasPurkinje()\l+ SetCacheReplication()\l+ GetDoCacheReplication()\l+ rGetIntracellularConductivityTensor()\l+ rGetExtracellularConductivityTensor()\l+ GetCardiacCell()\l+ GetPurkinjeCell()\l+ GetCardiacCellOrHaloCell()\l+ SolveCellSystems()\l+ rGetIionicCacheReplicated()\l+ rGetIntracellularStimulusCacheReplicated()\l+ rGetPurkinjeIionicCacheReplicated()\l+ rGetPurkinjeIntracellularStimulusCacheReplicated()\l+ UpdateCaches()\l+ UpdatePurkinjeCaches()\l+ ReplicateCaches()\l+ rGetCellsDistributed()\l+ rGetPurkinjeCellsDistributed()\l+ pGetMesh()\l+ SetConductivityModifier()\l+ SaveCardiacCells()\l+ LoadCardiacCells()\l# CalculateHaloNodesFromNodeExchange()\l# SetUpHaloCells()\l&#45; save()\l&#45; load()\l&#45; CreateIntracellularConductivityTensor()\l}" alt="" coords="368,1122,699,2040"/>
<area shape="rect" href="$classAbstractCellCycleModel.html" title="{AbstractCellCycleModel\n|# mpCell\l# mBirthTime\l# mCurrentCellCyclePhase\l# mG1Duration\l# mReadyToDivide\l# mDimension\l# mMinimumGapDuration\l# mStemCellG1Duration\l# mTransitCellG1Duration\l# mSDuration\l# mG2Duration\l# mMDuration\l|+ AbstractCellCycleModel()\l+ ~AbstractCellCycleModel()\l+ SetCell()\l+ Initialise()\l+ InitialiseDaughterCell()\l+ GetCell()\l+ SetBirthTime()\l+ SetDimension()\l+ GetDimension()\l+ GetBirthTime()\l+ GetAge()\l+ ReadyToDivide()\l+ UpdateCellCyclePhase()\l+ ResetForDivision()\l+ CreateCellCycleModel()\l+ GetCurrentCellCyclePhase()\l+ GetG1Duration()\l+ GetStemCellG1Duration()\l+ GetTransitCellG1Duration()\l+ GetSG2MDuration()\l+ GetSDuration()\l+ GetG2Duration()\l+ GetMDuration()\l+ SetStemCellG1Duration()\l+ SetTransitCellG1Duration()\l+ SetSDuration()\l+ SetG2Duration()\l+ SetMDuration()\l+ GetAverageTransitCellCycleTime()\l+ GetAverageStemCellCycleTime()\l+ CanCellTerminallyDifferentiate()\l+ GetMinimumGapDuration()\l+ SetMinimumGapDuration()\l+ OutputCellCycleModelInfo()\l+ OutputCellCycleModelParameters()\l&#45; serialize()\l}" alt="" coords="1016,168,1256,1032"/>
<area shape="rect" href="$classAbstractFeAssemblerInterface.html" title="{AbstractFeAssemblerInterface\&lt; CAN_ASSEMBLE_VECTOR, CAN_ASSEMBLE_MATRIX \&gt;\n|# mVectorToAssemble\l# mMatrixToAssemble\l# mAssembleMatrix\l# mAssembleVector\l# mZeroMatrixBeforeAssembly\l# mZeroVectorBeforeAssembly\l# mOwnershipRangeLo\l# mOwnershipRangeHi\l|+ AbstractFeAssemblerInterface()\l+ SetMatrixToAssemble()\l+ SetVectorToAssemble()\l+ Assemble()\l+ AssembleMatrix()\l+ AssembleVector()\l+ ~AbstractFeAssemblerInterface()\l# DoAssemble()\l}" alt="" coords="1800,440,2368,760"/>
<area shape="rect" href="$classAbstractFeAssemblerInterface.html" title="{AbstractFeAssemblerInterface\&lt; true, false \&gt;\n|# mVectorToAssemble\l# mMatrixToAssemble\l# mAssembleMatrix\l# mAssembleVector\l# mZeroMatrixBeforeAssembly\l# mZeroVectorBeforeAssembly\l# mOwnershipRangeLo\l# mOwnershipRangeHi\l|+ AbstractFeAssemblerInterface()\l+ SetMatrixToAssemble()\l+ SetVectorToAssemble()\l+ Assemble()\l+ AssembleMatrix()\l+ AssembleVector()\l+ ~AbstractFeAssemblerInterface()\l# DoAssemble()\l}" alt="" coords="2624,1421,2904,1741"/>
<area shape="rect" href="$classAbstractLinearPdeSolver.html" title="{AbstractLinearPdeSolver\&lt; ELEMENT_DIM, SPACE_DIM, PROBLEM_DIM \&gt;\n|# mpLinearSystem\l# mpMesh\l|+ AbstractLinearPdeSolver()\l+ ~AbstractLinearPdeSolver()\l+ InitialiseForSolve()\l+ PrepareForSetupLinearSystem()\l+ FinaliseLinearSystem()\l+ FollowingSolveLinearSystem()\l+ SetupLinearSystem()\l+ GetLinearSystem()\l}" alt="" coords="3540,490,4015,709"/>
<area shape="rect" href="$classAbstractMesh.html" title="{AbstractMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mNodes\l# mBoundaryNodes\l# mpDistributedVectorFactory\l# mNodesPermutation\l# mMeshFileBaseName\l# mMeshChangesDuringSimulation\l|+ GetNodeIteratorBegin()\l+ GetNodeIteratorEnd()\l+ AbstractMesh()\l+ ~AbstractMesh()\l+ GetNumNodes()\l+ GetNumBoundaryNodes()\l+ GetNumAllNodes()\l+ GetNode()\l+ GetNodeOrHaloNode()\l+ GetNodeFromPrePermutationIndex()\l+ ReadNodesPerProcessorFile()\l+ GetDistributedVectorFactory()\l+ SetDistributedVectorFactory()\l+ PermuteNodes()\l+ GetBoundaryNodeIteratorBegin()\l+ GetBoundaryNodeIteratorEnd()\l+ GetMeshFileBaseName()\l+ IsMeshOnDisk()\l+ rGetNodePermutation()\l+ GetVectorFromAtoB()\l+ GetDistanceBetweenNodes()\l+ GetWidth()\l+ CalculateBoundingBox()\l+ Scale()\l+ Translate()\l+ Translate()\l+ Rotate()\l+ Rotate()\l+ RotateX()\l+ RotateY()\l+ RotateZ()\l+ Rotate()\l+ RefreshMesh()\l+ IsMeshChanging()\l+ CalculateMaximumContainingElementsPerProcess()\l+ SetMeshHasChangedSinceLoading()\l# SetElementOwnerships()\l&#45; SolveNodeMapping()\l&#45; serialize()\l}" alt="" coords="5061,193,5400,1006"/>
<area shape="rect" href="$classAbstractMesh.html" title="{AbstractMesh\&lt; ELEMENT_DIM, ELEMENT_DIM \&gt;\n|# mNodes\l# mBoundaryNodes\l# mpDistributedVectorFactory\l# mNodesPermutation\l# mMeshFileBaseName\l# mMeshChangesDuringSimulation\l|+ GetNodeIteratorBegin()\l+ GetNodeIteratorEnd()\l+ AbstractMesh()\l+ ~AbstractMesh()\l+ GetNumNodes()\l+ GetNumBoundaryNodes()\l+ GetNumAllNodes()\l+ GetNode()\l+ GetNodeOrHaloNode()\l+ GetNodeFromPrePermutationIndex()\l+ ReadNodesPerProcessorFile()\l+ GetDistributedVectorFactory()\l+ SetDistributedVectorFactory()\l+ PermuteNodes()\l+ GetBoundaryNodeIteratorBegin()\l+ GetBoundaryNodeIteratorEnd()\l+ GetMeshFileBaseName()\l+ IsMeshOnDisk()\l+ rGetNodePermutation()\l+ GetVectorFromAtoB()\l+ GetDistanceBetweenNodes()\l+ GetWidth()\l+ CalculateBoundingBox()\l+ Scale()\l+ Translate()\l+ Translate()\l+ Rotate()\l+ Rotate()\l+ Rotate()\l+ RotateX()\l+ RotateY()\l+ RotateZ()\l+ RefreshMesh()\l+ IsMeshChanging()\l+ CalculateMaximumContainingElementsPerProcess()\l+ SetMeshHasChangedSinceLoading()\l# SetElementOwnerships()\l&#45; SolveNodeMapping()\l&#45; serialize()\l}" alt="" coords="4761,1174,5100,1988"/>
<area shape="rect" href="$classAbstractMesh.html" title="{AbstractMesh\&lt; DIM, DIM \&gt;\n|# mNodes\l# mBoundaryNodes\l# mpDistributedVectorFactory\l# mNodesPermutation\l# mMeshFileBaseName\l# mMeshChangesDuringSimulation\l|+ GetNodeIteratorBegin()\l+ GetNodeIteratorEnd()\l+ AbstractMesh()\l+ ~AbstractMesh()\l+ GetNumNodes()\l+ GetNumBoundaryNodes()\l+ GetNumAllNodes()\l+ GetNode()\l+ GetNodeOrHaloNode()\l+ GetNodeFromPrePermutationIndex()\l+ ReadNodesPerProcessorFile()\l+ GetDistributedVectorFactory()\l+ SetDistributedVectorFactory()\l+ PermuteNodes()\l+ GetBoundaryNodeIteratorBegin()\l+ GetBoundaryNodeIteratorEnd()\l+ GetMeshFileBaseName()\l+ IsMeshOnDisk()\l+ rGetNodePermutation()\l+ GetVectorFromAtoB()\l+ GetDistanceBetweenNodes()\l+ GetWidth()\l+ CalculateBoundingBox()\l+ Scale()\l+ Translate()\l+ Translate()\l+ Rotate()\l+ Rotate()\l+ Rotate()\l+ RotateX()\l+ RotateY()\l+ RotateZ()\l+ RefreshMesh()\l+ IsMeshChanging()\l+ CalculateMaximumContainingElementsPerProcess()\l+ SetMeshHasChangedSinceLoading()\l# SetElementOwnerships()\l&#45; SolveNodeMapping()\l&#45; serialize()\l}" alt="" coords="4399,1174,4737,1988"/>
<area shape="rect" href="$classAbstractMesh.html" title="{AbstractMesh\&lt; SPACE_DIM, SPACE_DIM \&gt;\n|# mNodes\l# mBoundaryNodes\l# mpDistributedVectorFactory\l# mNodesPermutation\l# mMeshFileBaseName\l# mMeshChangesDuringSimulation\l|+ GetNodeIteratorBegin()\l+ GetNodeIteratorEnd()\l+ AbstractMesh()\l+ ~AbstractMesh()\l+ GetNumNodes()\l+ GetNumBoundaryNodes()\l+ GetNumAllNodes()\l+ GetNode()\l+ GetNodeOrHaloNode()\l+ GetNodeFromPrePermutationIndex()\l+ ReadNodesPerProcessorFile()\l+ GetDistributedVectorFactory()\l+ SetDistributedVectorFactory()\l+ PermuteNodes()\l+ GetBoundaryNodeIteratorBegin()\l+ GetBoundaryNodeIteratorEnd()\l+ GetMeshFileBaseName()\l+ IsMeshOnDisk()\l+ rGetNodePermutation()\l+ GetVectorFromAtoB()\l+ GetDistanceBetweenNodes()\l+ GetWidth()\l+ CalculateBoundingBox()\l+ Scale()\l+ Translate()\l+ Translate()\l+ Rotate()\l+ Rotate()\l+ Rotate()\l+ RotateX()\l+ RotateY()\l+ RotateZ()\l+ RefreshMesh()\l+ IsMeshChanging()\l+ CalculateMaximumContainingElementsPerProcess()\l+ SetMeshHasChangedSinceLoading()\l# SetElementOwnerships()\l&#45; SolveNodeMapping()\l&#45; serialize()\l}" alt="" coords="6199,1174,6537,1988"/>
<area shape="rect" href="$classAbstractUntemplatedCardiacProblem.html" title="{AbstractUntemplatedCardiacProblem\n||+ ~AbstractUntemplatedCardiacProblem()\l}" alt="" coords="5475,558,5739,641"/>
<area shape="rect" href="$classCell.html" title="{Cell\n|# mCellProliferativeType\l# mCellPropertyCollection\l# mpCellCycleModel\l# mDeathTime\l# mStartOfApoptosisTime\l# mApoptosisTime\l# mUndergoingApoptosis\l# mIsDead\l# mIsLogged\l&#45; mCanDivide\l|+ Cell()\l+ ~Cell()\l+ GetCellProliferativeType()\l+ SetCellProliferativeType()\l+ SetBirthTime()\l+ SetCellCycleModel()\l+ GetCellCycleModel()\l+ InitialiseCellCycleModel()\l+ GetAge()\l+ GetBirthTime()\l+ GetStartOfApoptosisTime()\l+ GetApoptosisTime()\l+ SetApoptosisTime()\l+ GetMutationState()\l+ GetCellData()\l+ SetMutationState()\l+ rGetCellPropertyCollection()\l+ rGetCellPropertyCollection()\l+ AddCellProperty()\l+ RemoveCellProperty()\l+ HasCellProperty()\l+ ReadyToDivide()\l+ Divide()\l+ StartApoptosis()\l+ Kill()\l+ HasApoptosisBegun()\l+ GetTimeUntilDeath()\l+ IsDead()\l+ SetLogged()\l+ IsLogged()\l+ SetAncestor()\l+ GetAncestor()\l+ GetCellId()\l&#45; serialize()\l}" alt="" coords="5763,201,5957,998"/>
<area shape="rect" href="$classCellCycleModelOdeSolver.html" title="{CellCycleModelOdeSolver\&lt; CELL_CYCLE_MODEL, ODE_SOLVER \&gt;\n|&#45; mpInstance\l|+ IsSetUp()\l+ Initialise()\l+ IsAdaptive()\l+ Instance()\l&#45; CellCycleModelOdeSolver()\l&#45; serialize()\l}" alt="" coords="5981,516,6416,684"/>
<area shape="rect" href="$classCellCycleModelOdeSolver_3_01CELL__CYCLE__MODEL_00_01BackwardEulerIvpOdeSolver_01_4.html" title="{CellCycleModelOdeSolver\&lt; CELL_CYCLE_MODEL, BackwardEulerIvpOdeSolver \&gt;\n|&#45; mpInstance\l|+ IsSetUp()\l+ Initialise()\l+ Reset()\l+ Instance()\l&#45; CellCycleModelOdeSolver()\l&#45; serialize()\l}" alt="" coords="6440,516,6952,684"/>
<area shape="rect" href="$classCommandLineArguments.html" title="{CommandLineArguments\n|+ p_argc\l+ p_argv\l&#45; mpInstance\l|+ OptionExists()\l+ GetValueCorrespondingToOption()\l+ GetDoubleCorrespondingToOption()\l+ GetIntCorrespondingToOption()\l+ GetUnsignedCorrespondingToOption()\l+ GetStringCorrespondingToOption()\l+ GetStringsCorrespondingToOption()\l+ GetDoublesCorrespondingToOption()\l+ GetIntsCorrespondingToOption()\l+ GetUnsignedsCorrespondingToOption()\l+ Instance()\l&#45; CommandLineArguments()\l&#45; GetIndexForArgument()\l&#45; GetNumberOfArgumentsForOption()\l&#45; TestOptionFormat()\l}" alt="" coords="6976,422,7237,777"/>
<area shape="rect" href="$classDynamicModelLoaderRegistry.html" title="{DynamicModelLoaderRegistry\n|&#45; mLoaders\l&#45; mDeletableLoaders\l&#45; mpInstance\l|+ GetLoader()\l+ GetLoader()\l+ ScheduleForDeletion()\l+ Instance()\l&#45; DynamicModelLoaderRegistry()\l}" alt="" coords="7261,508,7472,692"/>
<area shape="rect" href="$classSerializableSingleton.html" title="{SerializableSingleton\&lt; SINGLETON_CLASS \&gt;\n||+ GetSerializationWrapper()\l&#45; save()\l&#45; load()\l}" alt="" coords="7632,541,7925,658"/>
<area shape="rect" href="$classSerializableSingleton.html" title="{SerializableSingleton\&lt; WntConcentration\&lt; DIM \&gt; \&gt;\n||+ GetSerializationWrapper()\l&#45; save()\l&#45; load()\l}" alt="" coords="7344,1522,7664,1640"/>
<area shape="rect" href="$classSerializableSingleton.html" title="{SerializableSingleton\&lt; SimulationTime \&gt;\n||+ GetSerializationWrapper()\l&#45; save()\l&#45; load()\l}" alt="" coords="7688,1522,7944,1640"/>
<area shape="rect" href="$classSerializableSingleton.html" title="{SerializableSingleton\&lt; RandomNumberGenerator \&gt;\n||+ GetSerializationWrapper()\l&#45; save()\l&#45; load()\l}" alt="" coords="7979,1522,8296,1640"/>
<area shape="rect" href="$classMonodomainTissue.html" title="{MonodomainTissue\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n||+ MonodomainTissue()\l+ MonodomainTissue()\l&#45; serialize()\l}" alt="" coords="5,1522,344,1640"/>
<area shape="rect" href="$classBidomainTissue.html" title="{BidomainTissue\&lt; SPACE_DIM \&gt;\n|&#45; mpExtracellularConductivityTensors\l|+ BidomainTissue()\l+ BidomainTissue()\l+ ~BidomainTissue()\l+ rGetExtracellularConductivityTensor()\l&#45; serialize()\l&#45; CreateExtracellularConductivityTensors()\l}" alt="" coords="312,2564,579,2732"/>
<area shape="rect" href="$classBidomainTissue.html" title="{BidomainTissue\&lt; DIM \&gt;\n|&#45; mpExtracellularConductivityTensors\l|+ BidomainTissue()\l+ BidomainTissue()\l+ ~BidomainTissue()\l+ rGetExtracellularConductivityTensor()\l&#45; serialize()\l&#45; CreateExtracellularConductivityTensors()\l}" alt="" coords="196,3716,463,3884"/>
<area shape="rect" href="$classExtendedBidomainTissue.html" title="{ExtendedBidomainTissue\&lt; SPACE_DIM \&gt;\n|&#45; mpIntracellularConductivityTensorsSecondCell\l&#45; mIntracellularConductivitiesSecondCell\l&#45; mpExtracellularConductivityTensors\l&#45; mExtracellularStimulusCacheReplicated\l&#45; mGgapCacheReplicated\l&#45; mIionicCacheReplicatedSecondCell\l&#45; mIntracellularStimulusCacheReplicatedSecondCell\l&#45; mCellsDistributedSecondCell\l&#45; mExtracellularStimuliDistributed\l&#45; mGgapDistributed\l&#45; mAmFirstCell\l&#45; mAmSecondCell\l&#45; mAmGap\l&#45; mCmFirstCell\l&#45; mCmSecondCell\l&#45; mGGap\l&#45; mUserSuppliedExtracellularStimulus\l&#45; mGgapHeterogeneityRegions\l&#45; mGgapValues\l|+ ExtendedBidomainTissue()\l+ ExtendedBidomainTissue()\l+ ~ExtendedBidomainTissue()\l+ SetIntracellularConductivitiesSecondCell()\l+ GetCardiacSecondCell()\l+ GetExtracellularStimulus()\l+ rGetSecondCellsDistributed()\l+ rGetGapsDistributed()\l+ rGetExtracellularStimulusDistributed()\l+ GetIntracellularConductivitiesSecondCell()\l+ SolveCellSystems()\l+ CreateIntracellularConductivityTensorSecondCell()\l+ SetGgapHeterogeneities()\l+ CreateGGapConductivities()\l+ rGetExtracellularConductivityTensor()\l+ rGetIntracellularConductivityTensorSecondCell()\l+ rGetIionicCacheReplicatedSecondCell()\l+ rGetIntracellularStimulusCacheReplicatedSecondCell()\l+ rGetExtracellularStimulusCacheReplicated()\l+ rGetGgapCacheReplicated()\l+ GetAmFirstCell()\l+ GetAmSecondCell()\l+ GetAmGap()\l+ GetCmFirstCell()\l+ GetCmSecondCell()\l+ GetGGap()\l+ SetAmFirstCell()\l+ SetAmSecondCell()\l+ SetAmGap()\l+ SetCmFirstCell()\l+ SetCmSecondCell()\l+ SetGGap()\l+ HasTheUserSuppliedExtracellularStimulus()\l+ SetUserSuppliedExtracellularStimulus()\l+ SaveExtendedBidomainCells()\l+ SaveExtracellularStimulus()\l+ LoadExtracellularStimulus()\l+ LoadExtendedBidomainCells()\l&#45; serialize()\l&#45; CreateExtracellularConductivityTensors()\l&#45; UpdateAdditionalCaches()\l&#45; ReplicateAdditionalCaches()\l}" alt="" coords="653,2105,1005,3190"/>
<area shape="rect" href="$classExtendedBidomainTissue.html" title="{ExtendedBidomainTissue\&lt; DIM \&gt;\n|&#45; mpIntracellularConductivityTensorsSecondCell\l&#45; mIntracellularConductivitiesSecondCell\l&#45; mpExtracellularConductivityTensors\l&#45; mExtracellularStimulusCacheReplicated\l&#45; mGgapCacheReplicated\l&#45; mIionicCacheReplicatedSecondCell\l&#45; mIntracellularStimulusCacheReplicatedSecondCell\l&#45; mCellsDistributedSecondCell\l&#45; mExtracellularStimuliDistributed\l&#45; mGgapDistributed\l&#45; mAmFirstCell\l&#45; mAmSecondCell\l&#45; mAmGap\l&#45; mCmFirstCell\l&#45; mCmSecondCell\l&#45; mGGap\l&#45; mUserSuppliedExtracellularStimulus\l&#45; mGgapHeterogeneityRegions\l&#45; mGgapValues\l|+ ExtendedBidomainTissue()\l+ ExtendedBidomainTissue()\l+ ~ExtendedBidomainTissue()\l+ SetIntracellularConductivitiesSecondCell()\l+ GetCardiacSecondCell()\l+ GetExtracellularStimulus()\l+ rGetSecondCellsDistributed()\l+ rGetGapsDistributed()\l+ rGetExtracellularStimulusDistributed()\l+ GetIntracellularConductivitiesSecondCell()\l+ SolveCellSystems()\l+ CreateIntracellularConductivityTensorSecondCell()\l+ SetGgapHeterogeneities()\l+ CreateGGapConductivities()\l+ rGetExtracellularConductivityTensor()\l+ rGetIntracellularConductivityTensorSecondCell()\l+ rGetIionicCacheReplicatedSecondCell()\l+ rGetIntracellularStimulusCacheReplicatedSecondCell()\l+ rGetExtracellularStimulusCacheReplicated()\l+ rGetGgapCacheReplicated()\l+ GetAmFirstCell()\l+ GetAmSecondCell()\l+ GetAmGap()\l+ GetCmFirstCell()\l+ GetCmSecondCell()\l+ GetGGap()\l+ SetAmFirstCell()\l+ SetAmSecondCell()\l+ SetAmGap()\l+ SetCmFirstCell()\l+ SetCmSecondCell()\l+ SetGGap()\l+ HasTheUserSuppliedExtracellularStimulus()\l+ SetUserSuppliedExtracellularStimulus()\l+ SaveExtendedBidomainCells()\l+ SaveExtracellularStimulus()\l+ LoadExtracellularStimulus()\l+ LoadExtendedBidomainCells()\l&#45; serialize()\l&#45; CreateExtracellularConductivityTensors()\l&#45; UpdateAdditionalCaches()\l&#45; ReplicateAdditionalCaches()\l}" alt="" coords="543,3257,895,4342"/>
<area shape="rect" href="$classAbstractOdeBasedCellCycleModel.html" title="{AbstractOdeBasedCellCycleModel\n|# mDivideTime\l# mFinishedRunningOdes\l# mG2PhaseStartTime\l|+ AbstractOdeBasedCellCycleModel()\l+ ~AbstractOdeBasedCellCycleModel()\l+ UpdateCellCyclePhase()\l+ GetOdeStopTime()\l+ SetBirthTime()\l+ GetProteinConcentrations()\l+ SetProteinConcentrationsForTestsOnly()\l+ ResetForDivision()\l+ SetFinishedRunningOdes()\l+ SetDivideTime()\l+ SetG2PhaseStartTime()\l+ OutputCellCycleModelParameters()\l&#45; serialize()\l}" alt="" coords="723,1421,992,1741"/>
<area shape="rect" href="$classAbstractSimpleCellCycleModel.html" title="{AbstractSimpleCellCycleModel\n||+ AbstractSimpleCellCycleModel()\l+ ~AbstractSimpleCellCycleModel()\l+ ResetForDivision()\l+ UpdateCellCyclePhase()\l+ InitialiseDaughterCell()\l+ Initialise()\l+ OutputCellCycleModelParameters()\l# SetG1Duration()\l&#45; serialize()\l}" alt="" coords="1016,1472,1256,1690"/>
<area shape="rect" href="$classAbstractContinuumMechanicsAssembler.html" title="{AbstractContinuumMechanicsAssembler\&lt; CAN_ASSEMBLE_VECTOR, CAN_ASSEMBLE_MATRIX \&gt;\n|# mpMesh\l# mpQuadRule\l&#45; BLOCK_SYMMETRIC_MATRIX\l&#45; NUM_VERTICES_PER_ELEMENT\l&#45; NUM_NODES_PER_ELEMENT\l&#45; SPATIAL_BLOCK_SIZE_ELEMENTAL\l&#45; PRESSURE_BLOCK_SIZE_ELEMENTAL\l&#45; STENCIL_SIZE\l|+ AbstractContinuumMechanicsAssembler()\l+ ~AbstractContinuumMechanicsAssembler()\l# DoAssemble()\l# ComputeSpatialSpatialMatrixTerm()\l# ComputeSpatialPressureMatrixTerm()\l# ComputePressurePressureMatrixTerm()\l# ComputeSpatialVectorTerm()\l# ComputePressureVectorTerm()\l# AssembleOnElement()\l}" alt="" coords="1331,1412,1957,1750"/>
<area shape="rect" href="$classAbstractContinuumMechanicsAssembler.html" title="{AbstractContinuumMechanicsAssembler\&lt; DIM, true, true \&gt;\n|# mpMesh\l# mpQuadRule\l&#45; BLOCK_SYMMETRIC_MATRIX\l&#45; NUM_VERTICES_PER_ELEMENT\l&#45; NUM_NODES_PER_ELEMENT\l&#45; SPATIAL_BLOCK_SIZE_ELEMENTAL\l&#45; PRESSURE_BLOCK_SIZE_ELEMENTAL\l&#45; STENCIL_SIZE\l|+ AbstractContinuumMechanicsAssembler()\l+ ~AbstractContinuumMechanicsAssembler()\l# DoAssemble()\l# ComputeSpatialSpatialMatrixTerm()\l# ComputeSpatialPressureMatrixTerm()\l# ComputePressurePressureMatrixTerm()\l# ComputeSpatialVectorTerm()\l# ComputePressureVectorTerm()\l# AssembleOnElement()\l}" alt="" coords="1111,2478,1479,2817"/>
<area shape="rect" href="$classAbstractFeAssemblerCommon.html" title="{AbstractFeAssemblerCommon\&lt; CAN_ASSEMBLE_VECTOR, CAN_ASSEMBLE_MATRIX \&gt;\n|# mCurrentSolutionOrGuessReplicated\l|+ AbstractFeAssemblerCommon()\l+ SetCurrentSolution()\l+ ~AbstractFeAssemblerCommon()\l# GetCurrentSolutionOrGuessValue()\l# ResetInterpolatedQuantities()\l# IncrementInterpolatedQuantities()\l# IncrementInterpolatedGradientQuantities()\l}" alt="" coords="2032,1489,2600,1673"/>
<area shape="rect" href="$classAbstractFeAssemblerCommon.html" title="{AbstractFeAssemblerCommon\&lt; ELEMENT_DIM, SPACE_DIM, PROBLEM_DIM, true, false, NORMAL \&gt;\n|# mCurrentSolutionOrGuessReplicated\l|+ AbstractFeAssemblerCommon()\l+ SetCurrentSolution()\l+ ~AbstractFeAssemblerCommon()\l# GetCurrentSolutionOrGuessValue()\l# ResetInterpolatedQuantities()\l# IncrementInterpolatedQuantities()\l# IncrementInterpolatedGradientQuantities()\l}" alt="" coords="1503,2556,2143,2740"/>
<area shape="rect" href="$classContinuumMechanicsNeumannBcsAssembler.html" title="{ContinuumMechanicsNeumannBcsAssembler\&lt; DIM \&gt;\n|# mpMesh\l# mpProblemDefinition\l# mpQuadRule\l&#45; NUM_VERTICES_PER_ELEMENT\l&#45; NUM_NODES_PER_ELEMENT\l&#45; SPATIAL_BLOCK_SIZE_ELEMENTAL\l&#45; PRESSURE_BLOCK_SIZE_ELEMENTAL\l&#45; STENCIL_SIZE\l|+ ContinuumMechanicsNeumannBcsAssembler()\l+ ~ContinuumMechanicsNeumannBcsAssembler()\l# DoAssemble()\l# AssembleOnBoundaryElement()\l}" alt="" coords="2167,2521,2503,2774"/>
<area shape="rect" href="$classAbstractDynamicLinearPdeSolver.html" title="{AbstractDynamicLinearPdeSolver\&lt; ELEMENT_DIM, SPACE_DIM, PROBLEM_DIM \&gt;\n|# mTstart\l# mTend\l# mTimesSet\l# mInitialCondition\l# mMatrixIsAssembled\l# mMatrixIsConstant\l# mIdealTimeStep\l# mLastWorkingTimeStep\l# mpTimeAdaptivityController\l# mOutputToVtk\l# mOutputToParallelVtk\l# mOutputToTxt\l# mOutputDirectory\l# mFilenamePrefix\l# mPrintingTimestepMultiple\l# mpHdf5Writer\l# mVariableColumnIds\l|+ AbstractDynamicLinearPdeSolver()\l+ SetTimes()\l+ SetTimeStep()\l+ SetInitialCondition()\l+ Solve()\l+ SetMatrixIsNotAssembled()\l+ SetTimeAdaptivityController()\l+ SetOutputToVtk()\l+ SetOutputToParallelVtk()\l+ SetOutputToTxt()\l+ SetOutputDirectoryAndPrefix()\l+ SetPrintingTimestepMultiple()\l# InitialiseHdf5Writer()\l# WriteOneStep()\l}" alt="" coords="3121,1293,3649,1869"/>
<area shape="rect" href="$classAbstractDynamicLinearPdeSolver.html" title="{AbstractDynamicLinearPdeSolver\&lt; ELEMENT_DIM, SPACE_DIM, 3 \&gt;\n|# mTstart\l# mTend\l# mTimesSet\l# mInitialCondition\l# mMatrixIsAssembled\l# mMatrixIsConstant\l# mIdealTimeStep\l# mLastWorkingTimeStep\l# mpTimeAdaptivityController\l# mOutputToVtk\l# mOutputToParallelVtk\l# mOutputToTxt\l# mOutputDirectory\l# mFilenamePrefix\l# mPrintingTimestepMultiple\l# mpHdf5Writer\l# mVariableColumnIds\l|+ AbstractDynamicLinearPdeSolver()\l+ SetTimes()\l+ SetTimeStep()\l+ SetInitialCondition()\l+ Solve()\l+ SetMatrixIsNotAssembled()\l+ SetTimeAdaptivityController()\l+ SetOutputToVtk()\l+ SetOutputToParallelVtk()\l+ SetOutputToTxt()\l+ SetOutputDirectoryAndPrefix()\l+ SetPrintingTimestepMultiple()\l# InitialiseHdf5Writer()\l# WriteOneStep()\l}" alt="" coords="2527,2360,2964,2936"/>
<area shape="rect" href="$classAbstractDynamicLinearPdeSolver.html" title="{AbstractDynamicLinearPdeSolver\&lt; ELEMENT_DIM, SPACE_DIM, 1 \&gt;\n|# mTstart\l# mTend\l# mTimesSet\l# mInitialCondition\l# mMatrixIsAssembled\l# mMatrixIsConstant\l# mIdealTimeStep\l# mLastWorkingTimeStep\l# mpTimeAdaptivityController\l# mOutputToVtk\l# mOutputToParallelVtk\l# mOutputToTxt\l# mOutputDirectory\l# mFilenamePrefix\l# mPrintingTimestepMultiple\l# mpHdf5Writer\l# mVariableColumnIds\l|+ AbstractDynamicLinearPdeSolver()\l+ SetTimes()\l+ SetTimeStep()\l+ SetInitialCondition()\l+ Solve()\l+ SetMatrixIsNotAssembled()\l+ SetTimeAdaptivityController()\l+ SetOutputToVtk()\l+ SetOutputToParallelVtk()\l+ SetOutputToTxt()\l+ SetOutputDirectoryAndPrefix()\l+ SetPrintingTimestepMultiple()\l# InitialiseHdf5Writer()\l# WriteOneStep()\l}" alt="" coords="3449,2360,3887,2936"/>
<area shape="rect" href="$classAbstractDynamicLinearPdeSolver.html" title="{AbstractDynamicLinearPdeSolver\&lt; ELEMENT_DIM, SPACE_DIM, 2 \&gt;\n|# mTstart\l# mTend\l# mTimesSet\l# mInitialCondition\l# mMatrixIsAssembled\l# mMatrixIsConstant\l# mIdealTimeStep\l# mLastWorkingTimeStep\l# mpTimeAdaptivityController\l# mOutputToVtk\l# mOutputToParallelVtk\l# mOutputToTxt\l# mOutputDirectory\l# mFilenamePrefix\l# mPrintingTimestepMultiple\l# mpHdf5Writer\l# mVariableColumnIds\l|+ AbstractDynamicLinearPdeSolver()\l+ SetTimes()\l+ SetTimeStep()\l+ SetInitialCondition()\l+ Solve()\l+ SetMatrixIsNotAssembled()\l+ SetTimeAdaptivityController()\l+ SetOutputToVtk()\l+ SetOutputToParallelVtk()\l+ SetOutputToTxt()\l+ SetOutputDirectoryAndPrefix()\l+ SetPrintingTimestepMultiple()\l# InitialiseHdf5Writer()\l# WriteOneStep()\l}" alt="" coords="2988,2360,3425,2936"/>
<area shape="rect" href="$classAbstractStaticLinearPdeSolver.html" title="{AbstractStaticLinearPdeSolver\&lt; ELEMENT_DIM, SPACE_DIM, PROBLEM_DIM \&gt;\n||+ AbstractStaticLinearPdeSolver()\l+ Solve()\l}" alt="" coords="3865,1530,4375,1632"/>
<area shape="rect" href="$classAbstractStaticLinearPdeSolver.html" title="{AbstractStaticLinearPdeSolver\&lt; ELEMENT_DIM, SPACE_DIM, 1 \&gt;\n||+ AbstractStaticLinearPdeSolver()\l+ Solve()\l}" alt="" coords="3911,2597,4329,2698"/>
<area shape="rect" href="$classAbstractTetrahedralMesh.html" title="{AbstractTetrahedralMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mMeshIsLinear\l# mElements\l# mBoundaryElements\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ AbstractTetrahedralMesh()\l+ ~AbstractTetrahedralMesh()\l+ GetNumElements()\l+ GetNumLocalElements()\l+ GetNumBoundaryElements()\l+ GetNumLocalBoundaryElements()\l+ GetNumAllElements()\l+ GetNumAllBoundaryElements()\l+ GetNumCableElements()\l+ GetNumVertices()\l+ GetElement()\l+ GetBoundaryElement()\l+ ConstructFromMeshReader()\l+ ConstructFromMesh()\l+ GetBoundaryElementIteratorBegin()\l+ GetBoundaryElementIteratorEnd()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForBoundaryElement()\l+ CheckOutwardNormals()\l+ ConstructLinearMesh()\l+ ConstructRectangularMesh()\l+ ConstructCuboid()\l+ ConstructRegularSlabMesh()\l+ CalculateDesignatedOwnershipOfBoundaryElement()\l+ CalculateDesignatedOwnershipOfElement()\l+ CalculateMaximumNodeConnectivityPerProcess()\l+ GetHaloNodeIndices()\l+ CalculateNodeExchange()\l+ CalculateMinMaxEdgeLengths()\l# SetElementOwnerships()\l&#45; SolveElementMapping()\l&#45; SolveBoundaryElementMapping()\l&#45; save()\l&#45; load()\l}" alt="" coords="5753,1225,6124,1937"/>
<area shape="rect" href="$classAbstractTetrahedralMesh.html" title="{AbstractTetrahedralMesh\&lt; ELEMENT_DIM, ELEMENT_DIM \&gt;\n|# mMeshIsLinear\l# mElements\l# mBoundaryElements\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ AbstractTetrahedralMesh()\l+ ~AbstractTetrahedralMesh()\l+ GetNumElements()\l+ GetNumLocalElements()\l+ GetNumBoundaryElements()\l+ GetNumLocalBoundaryElements()\l+ GetNumAllElements()\l+ GetNumAllBoundaryElements()\l+ GetNumCableElements()\l+ GetNumVertices()\l+ GetElement()\l+ GetBoundaryElement()\l+ ConstructFromMeshReader()\l+ ConstructFromMesh()\l+ GetBoundaryElementIteratorBegin()\l+ GetBoundaryElementIteratorEnd()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForBoundaryElement()\l+ CheckOutwardNormals()\l+ ConstructLinearMesh()\l+ ConstructRectangularMesh()\l+ ConstructCuboid()\l+ ConstructRegularSlabMesh()\l+ CalculateDesignatedOwnershipOfBoundaryElement()\l+ CalculateDesignatedOwnershipOfElement()\l+ CalculateMaximumNodeConnectivityPerProcess()\l+ GetHaloNodeIndices()\l+ CalculateNodeExchange()\l+ CalculateMinMaxEdgeLengths()\l# SetElementOwnerships()\l&#45; SolveElementMapping()\l&#45; SolveBoundaryElementMapping()\l&#45; save()\l&#45; load()\l}" alt="" coords="5820,2292,6209,3004"/>
<area shape="rect" href="$classAbstractTetrahedralMesh.html" title="{AbstractTetrahedralMesh\&lt; DIM, DIM \&gt;\n|# mMeshIsLinear\l# mElements\l# mBoundaryElements\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ AbstractTetrahedralMesh()\l+ ~AbstractTetrahedralMesh()\l+ GetNumElements()\l+ GetNumLocalElements()\l+ GetNumBoundaryElements()\l+ GetNumLocalBoundaryElements()\l+ GetNumAllElements()\l+ GetNumAllBoundaryElements()\l+ GetNumCableElements()\l+ GetNumVertices()\l+ GetElement()\l+ GetBoundaryElement()\l+ ConstructFromMeshReader()\l+ ConstructFromMesh()\l+ GetBoundaryElementIteratorBegin()\l+ GetBoundaryElementIteratorEnd()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForBoundaryElement()\l+ CheckOutwardNormals()\l+ ConstructLinearMesh()\l+ ConstructRectangularMesh()\l+ ConstructCuboid()\l+ ConstructRegularSlabMesh()\l+ CalculateDesignatedOwnershipOfBoundaryElement()\l+ CalculateDesignatedOwnershipOfElement()\l+ CalculateMaximumNodeConnectivityPerProcess()\l+ GetHaloNodeIndices()\l+ CalculateNodeExchange()\l+ CalculateMinMaxEdgeLengths()\l# SetElementOwnerships()\l&#45; SolveElementMapping()\l&#45; SolveBoundaryElementMapping()\l&#45; save()\l&#45; load()\l}" alt="" coords="6612,2292,6953,3004"/>
<area shape="rect" href="$classAbstractTetrahedralMesh.html" title="{AbstractTetrahedralMesh\&lt; SPACE_DIM, SPACE_DIM \&gt;\n|# mMeshIsLinear\l# mElements\l# mBoundaryElements\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ AbstractTetrahedralMesh()\l+ ~AbstractTetrahedralMesh()\l+ GetNumElements()\l+ GetNumLocalElements()\l+ GetNumBoundaryElements()\l+ GetNumLocalBoundaryElements()\l+ GetNumAllElements()\l+ GetNumAllBoundaryElements()\l+ GetNumCableElements()\l+ GetNumVertices()\l+ GetElement()\l+ GetBoundaryElement()\l+ ConstructFromMeshReader()\l+ ConstructFromMesh()\l+ GetBoundaryElementIteratorBegin()\l+ GetBoundaryElementIteratorEnd()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForBoundaryElement()\l+ CheckOutwardNormals()\l+ ConstructLinearMesh()\l+ ConstructRectangularMesh()\l+ ConstructCuboid()\l+ ConstructRegularSlabMesh()\l+ CalculateDesignatedOwnershipOfBoundaryElement()\l+ CalculateDesignatedOwnershipOfElement()\l+ CalculateMaximumNodeConnectivityPerProcess()\l+ GetHaloNodeIndices()\l+ CalculateNodeExchange()\l+ CalculateMinMaxEdgeLengths()\l# SetElementOwnerships()\l&#45; SolveElementMapping()\l&#45; SolveBoundaryElementMapping()\l&#45; save()\l&#45; load()\l}" alt="" coords="6233,2292,6588,3004"/>
<area shape="rect" href="$classVertexMesh.html" title="{VertexMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mElements\l# mFaces\l# mVoronoiElementIndexMap\l# mpDelaunayMesh\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ VertexMesh()\l+ VertexMesh()\l+ VertexMesh()\l+ VertexMesh()\l+ VertexMesh()\l+ ~VertexMesh()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumAllElements()\l+ GetNumFaces()\l+ GetElement()\l+ GetFace()\l+ GetCentroidOfElement()\l+ ConstructFromMeshReader()\l+ Clear()\l+ GetDelaunayNodeIndexCorrespondingToVoronoiElementIndex()\l+ GetVoronoiElementIndexCorrespondingToDelaunayNodeIndex()\l+ GetVectorFromAtoB()\l+ GetVolumeOfElement()\l+ GetSurfaceAreaOfElement()\l+ GetAreaGradientOfElementAtNode()\l+ GetPreviousEdgeGradientOfElementAtNode()\l+ GetNextEdgeGradientOfElementAtNode()\l+ GetPerimeterGradientOfElementAtNode()\l+ CalculateMomentsOfElement()\l+ GetEdgeLength()\l+ GetUnitNormalToFace()\l+ GetAreaOfFace()\l+ GetShortAxisOfElement()\l+ GetNeighbouringNodeIndices()\l+ GetNeighbouringNodeNotAlsoInElement()\l+ GetNeighbouringElementIndices()\l+ VertexMesh()\l+ VertexMesh()\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l# GenerateVerticesFromElementCircumcentres()\l# ElementIncludesPoint()\l# GetLocalIndexForElementEdgeClosestToPoint()\l# save()\l# load()\l}" alt="" coords="5175,1149,5577,2013"/>
<area shape="rect" href="$classVertexMesh.html" title="{VertexMesh\&lt; ELEMENT_DIM, ELEMENT_DIM \&gt;\n|# mElements\l# mFaces\l# mVoronoiElementIndexMap\l# mpDelaunayMesh\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ VertexMesh()\l+ VertexMesh()\l+ VertexMesh()\l+ VertexMesh()\l+ VertexMesh()\l+ ~VertexMesh()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumAllElements()\l+ GetNumFaces()\l+ GetElement()\l+ GetFace()\l+ GetCentroidOfElement()\l+ ConstructFromMeshReader()\l+ Clear()\l+ GetDelaunayNodeIndexCorrespondingToVoronoiElementIndex()\l+ GetVoronoiElementIndexCorrespondingToDelaunayNodeIndex()\l+ GetVectorFromAtoB()\l+ GetVolumeOfElement()\l+ GetSurfaceAreaOfElement()\l+ GetAreaGradientOfElementAtNode()\l+ GetPreviousEdgeGradientOfElementAtNode()\l+ GetNextEdgeGradientOfElementAtNode()\l+ GetPerimeterGradientOfElementAtNode()\l+ CalculateMomentsOfElement()\l+ GetEdgeLength()\l+ GetUnitNormalToFace()\l+ GetAreaOfFace()\l+ GetShortAxisOfElement()\l+ GetNeighbouringNodeIndices()\l+ GetNeighbouringNodeNotAlsoInElement()\l+ GetNeighbouringElementIndices()\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l# GenerateVerticesFromElementCircumcentres()\l# ElementIncludesPoint()\l# GetLocalIndexForElementEdgeClosestToPoint()\l# save()\l# load()\l}" alt="" coords="4967,2232,5369,3064"/>
<area shape="rect" href="$classVertexMesh.html" title="{VertexMesh\&lt; DIM, DIM \&gt;\n|# mElements\l# mFaces\l# mVoronoiElementIndexMap\l# mpDelaunayMesh\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ VertexMesh()\l+ VertexMesh()\l+ VertexMesh()\l+ VertexMesh()\l+ VertexMesh()\l+ ~VertexMesh()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumAllElements()\l+ GetNumFaces()\l+ GetElement()\l+ GetFace()\l+ GetCentroidOfElement()\l+ ConstructFromMeshReader()\l+ Clear()\l+ GetDelaunayNodeIndexCorrespondingToVoronoiElementIndex()\l+ GetVoronoiElementIndexCorrespondingToDelaunayNodeIndex()\l+ GetVectorFromAtoB()\l+ GetVolumeOfElement()\l+ GetSurfaceAreaOfElement()\l+ GetAreaGradientOfElementAtNode()\l+ GetPreviousEdgeGradientOfElementAtNode()\l+ GetNextEdgeGradientOfElementAtNode()\l+ GetPerimeterGradientOfElementAtNode()\l+ CalculateMomentsOfElement()\l+ GetEdgeLength()\l+ GetUnitNormalToFace()\l+ GetAreaOfFace()\l+ GetShortAxisOfElement()\l+ GetNeighbouringNodeIndices()\l+ GetNeighbouringNodeNotAlsoInElement()\l+ GetNeighbouringElementIndices()\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l# GenerateVerticesFromElementCircumcentres()\l# ElementIncludesPoint()\l# GetLocalIndexForElementEdgeClosestToPoint()\l# save()\l# load()\l}" alt="" coords="5393,2232,5796,3064"/>
<area shape="rect" href="$classPottsMesh.html" title="{PottsMesh\&lt; DIM \&gt;\n|# mElements\l# mDeletedElementIndices\l# mVonNeumannNeighbouringNodeIndices\l# mMooreNeighbouringNodeIndices\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ PottsMesh()\l+ PottsMesh()\l+ ~PottsMesh()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumAllElements()\l+ GetElement()\l+ GetCentroidOfElement()\l+ ConstructFromMeshReader()\l+ Clear()\l+ GetVectorFromAtoB()\l+ GetVolumeOfElement()\l+ GetSurfaceAreaOfElement()\l+ GetMooreNeighbouringNodeIndices()\l+ GetVonNeumannNeighbouringNodeIndices()\l+ DeleteElement()\l+ DivideElement()\l+ AddElement()\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l# save()\l# load()\l}" alt="" coords="4404,2377,4695,2918"/>
<area shape="rect" href="$classPottsMesh.html" title="{PottsMesh\&lt; SPACE_DIM \&gt;\n|# mElements\l# mDeletedElementIndices\l# mVonNeumannNeighbouringNodeIndices\l# mMooreNeighbouringNodeIndices\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ PottsMesh()\l+ PottsMesh()\l+ ~PottsMesh()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumAllElements()\l+ GetElement()\l+ GetCentroidOfElement()\l+ ConstructFromMeshReader()\l+ Clear()\l+ GetVectorFromAtoB()\l+ GetVolumeOfElement()\l+ GetSurfaceAreaOfElement()\l+ GetMooreNeighbouringNodeIndices()\l+ GetVonNeumannNeighbouringNodeIndices()\l+ DeleteElement()\l+ DivideElement()\l+ AddElement()\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l# save()\l# load()\l}" alt="" coords="4277,3529,4568,4070"/>
<area shape="rect" href="$classSemMesh.html" title="{SemMesh\&lt; DIM \&gt;\n|# mElements\l# mDeletedElementIndices\l# mDeletedNodeIndices\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ SemMesh()\l+ SemMesh()\l+ ~SemMesh()\l+ GetNumNodes()\l+ GetNumAllNodes()\l+ GetNumElements()\l+ GetNumAllElements()\l+ GetElement()\l+ ConstructFromMeshReader()\l+ Clear()\l+ ReMesh()\l+ DeleteElement()\l+ AddElement()\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l# save()\l# load()\l}" alt="" coords="4719,2428,4943,2868"/>
</map>
