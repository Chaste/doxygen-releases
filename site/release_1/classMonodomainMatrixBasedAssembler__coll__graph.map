<area shape="rect" href="$classMonodomainDg0Assembler.html" title="{MonodomainDg0Assembler\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|+ E_DIM\l+ S_DIM\l+ P_DIM\l# mSourceTerm\l# mpMonodomainPde\l|+ MonodomainDg0Assembler()\l+ ~MonodomainDg0Assembler()\l# ComputeVectorTerm()\l# ResetInterpolatedQuantities()\l# IncrementInterpolatedQuantities()\l# PrepareForAssembleSystem()\l# InitialiseForSolve()\l}" alt="" coords="415,3523,793,3739">
<area shape="rect" href="$classSimpleDg0ParabolicAssembler.html" title="{SimpleDg0ParabolicAssembler\&lt; ELEMENT_DIM, SPACE_DIM, false, MonodomainDg0Assembler\&lt; ELEMENT_DIM, SPACE_DIM \&gt; \&gt;\n|+ E_DIM\l+ S_DIM\l+ P_DIM\l&#45; mpParabolicPde\l|}" alt="" coords="792,3316,1595,3434">
<area shape="rect" href="$classAbstractLinearAssembler.html" title="{AbstractLinearAssembler\&lt; ELEMENT_DIM, SPACE_DIM, 1, NON_HEART, SimpleDg0ParabolicAssembler\&lt; ELEMENT_DIM, SPACE_DIM, NON_HEART, MonodomainDg0Assembler\&lt; ELEMENT_DIM, SPACE_DIM \&gt; \&gt; \&gt;\n|&#45; mMatrixIsConstant\l|+ AbstractLinearAssembler()\l+ ~AbstractLinearAssembler()\l+ Solve()\l# SetMatrixIsConst()\l# ApplyDirichletConditions()\l# InitialiseForSolve()\l# ProblemIsNonlinear()\l# StaticSolve()\l}" alt="" coords="1677,2819,2984,2992">
<area shape="rect" href="$classAbstractStaticAssembler.html" title="{AbstractStaticAssembler\&lt; ELEMENT_DIM, SPACE_DIM, PROBLEM_DIM, NON_HEART, SimpleDg0ParabolicAssembler\&lt; ELEMENT_DIM, SPACE_DIM, NON_HEART, MonodomainDg0Assembler\&lt; ELEMENT_DIM, SPACE_DIM \&gt; \&gt; \&gt;\n|# mpMesh\l# mpQuadRule\l# mpSurfaceQuadRule\l# mCurrentSolutionOrGuessReplicated\l# mpLinearSystem\l|+ AbstractStaticAssembler()\l+ SetNumberOfQuadraturePointsPerDimension()\l+ SetMesh()\l+ ~AbstractStaticAssembler()\l# AssembleOnElement()\l# AssembleOnSurfaceElement()\l# AssembleSystem()\l# PrepareForSolve()\l# GetLinearSystem()\l# rGetCurrentSolutionOrGuess()\l# GetCurrentSolutionOrGuessValue()\l}" alt="" coords="1633,2486,3028,2758">
<area shape="rect" href="$classAbstractAssembler.html" title="{AbstractAssembler\&lt; ELEMENT_DIM, SPACE_DIM, PROBLEM_DIM \&gt;\n|# mpBoundaryConditions\l|+ AbstractAssembler()\l+ SetBoundaryConditionsContainer()\l+ ~AbstractAssembler()\l+ ResetInterpolatedQuantities()\l+ IncrementInterpolatedQuantities()\l# SetMatrixIsConst()\l# ComputeMatrixTerm()\l# ComputeVectorTerm()\l# ComputeVectorSurfaceTerm()\l# AssembleOnElement()\l# AssembleOnSurfaceElement()\l# AssembleSystem()\l# PrepareForSolve()\l# PrepareForAssembleSystem()\l# FinaliseAssembleSystem()\l# FinaliseLinearSystem()\l# ApplyDirichletConditions()\l# ProblemIsNonlinear()\l# StaticSolve()\l# InitialiseForSolve()\l# GetLinearSystem()\l# rGetCurrentSolutionOrGuess()\l# ApplyNeummanBoundaryConditions()\l}" alt="" coords="3829,1426,4264,1810">
<area shape="rect" href="$classAbstractStaticAssembler.html" title="{AbstractStaticAssembler\&lt; ELEMENT_DIM, SPACE_DIM, PROBLEM_DIM, NON_HEART, CONCRETE \&gt;\n|# mpMesh\l# mpQuadRule\l# mpSurfaceQuadRule\l# mCurrentSolutionOrGuessReplicated\l# mpLinearSystem\l|+ AbstractStaticAssembler()\l+ SetNumberOfQuadraturePointsPerDimension()\l+ SetMesh()\l+ ~AbstractStaticAssembler()\l# AssembleOnElement()\l# AssembleOnSurfaceElement()\l# AssembleSystem()\l# PrepareForSolve()\l# GetLinearSystem()\l# rGetCurrentSolutionOrGuess()\l# GetCurrentSolutionOrGuessValue()\l}" alt="" coords="2064,2102,2699,2374">
<area shape="rect" href="$classAbstractStaticAssembler.html" title="{AbstractStaticAssembler\&lt; ELEMENT_DIM, SPACE_DIM, PROBLEM_DIM, NON_HEART, SimpleDg0ParabolicAssembler\&lt; ELEMENT_DIM, SPACE_DIM, NON_HEART, CONCRETE \&gt; \&gt;\n|# mpMesh\l# mpQuadRule\l# mpSurfaceQuadRule\l# mCurrentSolutionOrGuessReplicated\l# mpLinearSystem\l|+ AbstractStaticAssembler()\l+ SetNumberOfQuadraturePointsPerDimension()\l+ SetMesh()\l+ ~AbstractStaticAssembler()\l# AssembleOnElement()\l# AssembleOnSurfaceElement()\l# AssembleSystem()\l# PrepareForSolve()\l# GetLinearSystem()\l# rGetCurrentSolutionOrGuess()\l# GetCurrentSolutionOrGuessValue()\l}" alt="" coords="3052,2486,4159,2758">
<area shape="rect" href="$classAbstractStaticAssembler.html" title="{AbstractStaticAssembler\&lt; ELEMENT_DIM, SPACE_DIM, PROBLEM_DIM, NON_HEART, MonodomainRhsMatrixAssembler\&lt; DIM \&gt; \&gt;\n|# mpMesh\l# mpQuadRule\l# mpSurfaceQuadRule\l# mCurrentSolutionOrGuessReplicated\l# mpLinearSystem\l|+ AbstractStaticAssembler()\l+ SetNumberOfQuadraturePointsPerDimension()\l+ SetMesh()\l+ ~AbstractStaticAssembler()\l# AssembleOnElement()\l# AssembleOnSurfaceElement()\l# AssembleSystem()\l# PrepareForSolve()\l# GetLinearSystem()\l# rGetCurrentSolutionOrGuess()\l# GetCurrentSolutionOrGuessValue()\l}" alt="" coords="804,2486,1609,2758">
<area shape="rect" href="$classBoundaryConditionsContainer.html" title="{BoundaryConditionsContainer\&lt; ELEMENT_DIM, SPACE_DIM, PROBLEM_DIM \&gt;\n|&#45; mpNeumannMap\l&#45; mLastNeumannCondition\l&#45; mAnyNonZeroNeumannConditionsForUnknown\l&#45; mpZeroBoundaryCondition\l|+ BoundaryConditionsContainer()\l+ ~BoundaryConditionsContainer()\l+ AddDirichletBoundaryCondition()\l+ AddNeumannBoundaryCondition()\l+ DefineZeroDirichletOnMeshBoundary()\l+ DefineConstantDirichletOnMeshBoundary()\l+ DefineZeroNeumannOnMeshBoundary()\l+ ApplyDirichletToLinearProblem()\l+ ApplyDirichletToNonlinearResidual()\l+ ApplyDirichletToNonlinearJacobian()\l+ Validate()\l+ GetNeumannBCValue()\l+ HasNeumannBoundaryCondition()\l+ AnyNonZeroNeumannConditions()\l+ BeginNeumann()\l+ EndNeumann()\l}" alt="" coords="3745,799,4241,1124">
<area shape="rect" href="$classBoundaryConditionsContainer.html" title="{BoundaryConditionsContainer\&lt; ELEM_DIM, SPACE_DIM, PROBLEM_DIM \&gt;\n|&#45; mpNeumannMap\l&#45; mLastNeumannCondition\l&#45; mAnyNonZeroNeumannConditionsForUnknown\l&#45; mpZeroBoundaryCondition\l|+ BoundaryConditionsContainer()\l+ ~BoundaryConditionsContainer()\l+ AddDirichletBoundaryCondition()\l+ AddNeumannBoundaryCondition()\l+ DefineZeroDirichletOnMeshBoundary()\l+ DefineConstantDirichletOnMeshBoundary()\l+ DefineZeroNeumannOnMeshBoundary()\l+ ApplyDirichletToLinearProblem()\l+ ApplyDirichletToNonlinearResidual()\l+ ApplyDirichletToNonlinearJacobian()\l+ Validate()\l+ GetNeumannBCValue()\l+ HasNeumannBoundaryCondition()\l+ AnyNonZeroNeumannConditions()\l+ BeginNeumann()\l+ EndNeumann()\l}" alt="" coords="4033,367,4503,692">
<area shape="rect" href="$classLinearSystem.html" title="{LinearSystem\n|&#45; mLhsMatrix\l&#45; mRhsVector\l&#45; mSize\l&#45; mOwnershipRangeLo\l&#45; mOwnershipRangeHi\l&#45; mMatNullSpace\l&#45; mDestroyMatAndVec\l&#45; mKspSolver\l&#45; mKspIsSetup\l&#45; mNonZerosUsed\l&#45; mMatrixIsConstant\l&#45; mTolerance\l&#45; mUseAbsoluteTolerance\l&#45; mKspType\l&#45; mPcType\l&#45; mDirichletBoundaryConditionsVector\l|+ LinearSystem()\l+ LinearSystem()\l+ LinearSystem()\l+ ~LinearSystem()\l+ SetMatrixElement()\l+ AddToMatrixElement()\l+ AssembleFinalLinearSystem()\l+ AssembleIntermediateLinearSystem()\l+ AssembleFinalLhsMatrix()\l+ AssembleIntermediateLhsMatrix()\l+ AssembleRhsVector()\l+ SetMatrixIsSymmetric()\l+ SetMatrixIsConstant()\l+ SetRelativeTolerance()\l+ SetAbsoluteTolerance()\l+ SetKspType()\l+ SetPcType()\l+ DisplayMatrix()\l+ DisplayRhs()\l+ SetMatrixRow()\l+ ZeroMatrixRow()\l+ ZeroMatrixColumn()\l+ ZeroLhsMatrix()\l+ ZeroRhsVector()\l+ ZeroLinearSystem()\l+ Solve()\l+ SetRhsVectorElement()\l+ AddToRhsVectorElement()\l+ GetSize()\l+ SetNullBasis()\l+ rGetRhsVector()\l+ rGetLhsMatrix()\l+ rGetDirichletBoundaryConditionsVector()\l+ GetOwnershipRange()\l+ GetMatrixElement()\l+ GetRhsVectorElement()\l+ AddLhsMultipleValues()\l+ AddRhsMultipleValues()\l}" alt="" coords="4739,1216,5005,2019">
<area shape="rect" href="$classAbstractLinearAssembler.html" title="{AbstractLinearAssembler\&lt; ELEMENT_DIM, SPACE_DIM, PROBLEM_DIM, NON_HEART, CONCRETE \&gt;\n|&#45; mMatrixIsConstant\l|+ AbstractLinearAssembler()\l+ ~AbstractLinearAssembler()\l+ Solve()\l# SetMatrixIsConst()\l# ApplyDirichletConditions()\l# InitialiseForSolve()\l# ProblemIsNonlinear()\l# StaticSolve()\l}" alt="" coords="4275,2535,4909,2708">
<area shape="rect" href="$classAbstractLinearAssembler.html" title="{AbstractLinearAssembler\&lt; ELEMENT_DIM, SPACE_DIM, 1, NON_HEART, SimpleDg0ParabolicAssembler\&lt; ELEMENT_DIM, SPACE_DIM, NON_HEART, CONCRETE \&gt; \&gt;\n|&#45; mMatrixIsConstant\l|+ AbstractLinearAssembler()\l+ ~AbstractLinearAssembler()\l+ Solve()\l# SetMatrixIsConst()\l# ApplyDirichletConditions()\l# InitialiseForSolve()\l# ProblemIsNonlinear()\l# StaticSolve()\l}" alt="" coords="3840,2819,4861,2992">
<area shape="rect" href="$classAbstractLinearAssembler.html" title="{AbstractLinearAssembler\&lt; DIM, DIM, 1, false, MonodomainRhsMatrixAssembler\&lt; DIM \&gt; \&gt;\n|&#45; mMatrixIsConstant\l|+ AbstractLinearAssembler()\l+ ~AbstractLinearAssembler()\l+ Solve()\l# SetMatrixIsConst()\l# ApplyDirichletConditions()\l# InitialiseForSolve()\l# ProblemIsNonlinear()\l# StaticSolve()\l}" alt="" coords="932,2819,1481,2992">
<area shape="rect" href="$classGaussianQuadratureRule.html" title="{GaussianQuadratureRule\&lt; ELEMENT_DIM \&gt;\n|&#45; mNumQuadPoints\l&#45; mWeights\l&#45; mPoints\l|+ GaussianQuadratureRule()\l+ rGetQuadPoint()\l+ GetWeight()\l+ GetNumQuadPoints()\l}" alt="" coords="1636,1546,1919,1690">
<area shape="rect" href="$classGaussianQuadratureRule.html" title="{GaussianQuadratureRule\&lt; ELEM_DIM \&gt;\n|&#45; mNumQuadPoints\l&#45; mWeights\l&#45; mPoints\l|+ GaussianQuadratureRule()\l+ rGetQuadPoint()\l+ GetWeight()\l+ GetNumQuadPoints()\l}" alt="" coords="1729,890,1985,1034">
<area shape="rect" href="$classGaussianQuadratureRule.html" title="{GaussianQuadratureRule\&lt; ELEMENT_DIM&#45;1 \&gt;\n|&#45; mNumQuadPoints\l&#45; mWeights\l&#45; mPoints\l|+ GaussianQuadratureRule()\l+ rGetQuadPoint()\l+ GetWeight()\l+ GetNumQuadPoints()\l}" alt="" coords="2023,1546,2316,1690">
<area shape="rect" href="$classSimpleDg0ParabolicAssembler.html" title="{SimpleDg0ParabolicAssembler\&lt; ELEMENT_DIM, SPACE_DIM, NON_HEART, CONCRETE \&gt;\n|+ E_DIM\l+ S_DIM\l+ P_DIM\l&#45; mpParabolicPde\l|}" alt="" coords="2871,3082,3436,3199">
<area shape="rect" href="$classMonodomainRhsMatrixAssembler.html" title="{MonodomainRhsMatrixAssembler\&lt; SPACE_DIM \&gt;\n|+ E_DIM\l+ S_DIM\l+ P_DIM\l|+ ComputeMatrixTerm()\l+ ComputeVectorTerm()\l+ ComputeVectorSurfaceTerm()\l+ MonodomainRhsMatrixAssembler()\l+ ~MonodomainRhsMatrixAssembler()\l+ GetMatrix()\l}" alt="" coords="152,3288,467,3462">
<area shape="rect" href="$classMonodomainRhsMatrixAssembler.html" title="{MonodomainRhsMatrixAssembler\&lt; DIM \&gt;\n|+ E_DIM\l+ S_DIM\l+ P_DIM\l|+ ComputeMatrixTerm()\l+ ComputeVectorTerm()\l+ ComputeVectorSurfaceTerm()\l+ MonodomainRhsMatrixAssembler()\l+ ~MonodomainRhsMatrixAssembler()\l+ GetMatrix()\l}" alt="" coords="229,3054,493,3227">
