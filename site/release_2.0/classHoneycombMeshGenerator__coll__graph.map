<map id="G" name="G">
<area shape="rect" href="$classdouble.html" title="{double\n||}" alt="" coords="768,3166,827,3241"/>
<area shape="rect" href="$classMutableMesh.html" title="{MutableMesh\&lt; 2, 2 \&gt;\n|# mDeletedElementIndices\l# mDeletedBoundaryElementIndices\l# mDeletedNodeIndices\l# mAddedNodes\l|+ CheckIsVoronoi()\l+ MutableMesh()\l+ MutableMesh()\l+ ~MutableMesh()\l+ Clear()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumBoundaryElements()\l+ RescaleMeshFromBoundaryNode()\l+ AddNode()\l+ SetNode()\l+ MoveMergeNode()\l+ DeleteNode()\l+ DeleteNodePriorToReMesh()\l+ RefineElement()\l+ DeleteBoundaryNodeAt()\l+ ReIndex()\l+ ReMesh()\l+ ReMesh()\l&#45; serialize()\l&#45; CheckIsVoronoi()\l}" alt="" coords="851,3005,1085,3402"/>
<area shape="rect" href="$classTetrahedralMesh.html" title="{TetrahedralMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mElementWeightedDirections\l# mElementJacobians\l# mElementInverseJacobians\l# mElementJacobianDeterminants\l# mBoundaryElementWeightedDirections\l# mBoundaryElementJacobianDeterminants\l|+ TetrahedralMesh()\l+ ConstructFromMeshReader()\l+ ReadNodesPerProcessorFile()\l+ CheckIsConforming()\l+ GetVolume()\l+ GetSurfaceArea()\l+ Translate()\l+ Translate()\l+ Rotate()\l+ Rotate()\l+ RotateX()\l+ RotateY()\l+ RotateZ()\l+ Rotate()\l+ RefreshMesh()\l+ PermuteNodes()\l+ PermuteNodesWithMetisBinaries()\l+ PermuteNodes()\l+ GetContainingElementIndex()\l+ GetContainingElementIndexWithInitialGuess()\l+ GetNearestElementIndex()\l+ GetNearestElementIndexFromTestElements()\l+ GetContainingElementIndices()\l+ Clear()\l+ CalculateBoundaryOfFlaggedRegion()\l+ GetAngleBetweenNodes()\l+ UnflagAllElements()\l+ FlagElementsNotContainingNodes()\l+ RefreshJacobianCachedData()\l+ GetJacobianForElement()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForElement()\l+ GetWeightedDirectionForBoundaryElement()\l+ EdgesBegin()\l+ EdgesEnd()\l# SolveNodeMapping()\l# SolveElementMapping()\l# SolveBoundaryElementMapping()\l&#45; serialize()\l}" alt="" coords="976,1805,1293,2482"/>
<area shape="rect" href="$classMutableMesh.html" title="{MutableMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mDeletedElementIndices\l# mDeletedBoundaryElementIndices\l# mDeletedNodeIndices\l# mAddedNodes\l|+ MutableMesh()\l+ MutableMesh()\l+ ~MutableMesh()\l+ Clear()\l+ GetNumNodes()\l+ GetNumElements()\l+ GetNumBoundaryElements()\l+ RescaleMeshFromBoundaryNode()\l+ AddNode()\l+ SetNode()\l+ MoveMergeNode()\l+ DeleteNode()\l+ DeleteNodePriorToReMesh()\l+ RefineElement()\l+ DeleteBoundaryNodeAt()\l+ ReIndex()\l+ ReMesh()\l+ ReMesh()\l+ CheckIsVoronoi()\l+ RescaleMeshFromBoundaryNode()\l&#45; serialize()\l&#45; CheckIsVoronoi()\l}" alt="" coords="396,2533,695,2944"/>
<area shape="rect" href="$classAbstractTetrahedralMesh.html" title="{AbstractTetrahedralMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mMeshIsLinear\l# mElements\l# mBoundaryElements\l|+ GetElementIteratorBegin()\l+ GetElementIteratorEnd()\l+ AbstractTetrahedralMesh()\l+ ~AbstractTetrahedralMesh()\l+ GetNumElements()\l+ GetNumBoundaryElements()\l+ GetNumAllElements()\l+ GetNumAllBoundaryElements()\l+ GetElement()\l+ GetBoundaryElement()\l+ SetElementOwnerships()\l+ ConstructFromMeshReader()\l+ GetBoundaryElementIteratorBegin()\l+ GetBoundaryElementIteratorEnd()\l+ GetInverseJacobianForElement()\l+ GetWeightedDirectionForBoundaryElement()\l+ ConstructLinearMesh()\l+ ConstructRectangularMesh()\l+ ConstructCuboid()\l+ CalculateDesignatedOwnershipOfBoundaryElement()\l+ CalculateDesignatedOwnershipOfElement()\l&#45; SolveElementMapping()\l&#45; SolveBoundaryElementMapping()\l&#45; save()\l&#45; load()\l}" alt="" coords="1789,1274,2155,1714"/>
<area shape="rect" href="$classAbstractMesh.html" title="{AbstractMesh\&lt; ELEMENT_DIM, SPACE_DIM \&gt;\n|# mNodes\l# mBoundaryNodes\l# mpDistributedVectorFactory\l# mNodesPermutation\l# mMeshFileBaseName\l# mMeshChangesDuringSimulation\l|+ GetNodeIteratorBegin()\l+ GetNodeIteratorEnd()\l+ AbstractMesh()\l+ ~AbstractMesh()\l+ GetNumNodes()\l+ GetNumBoundaryNodes()\l+ GetNumAllNodes()\l+ GetNode()\l+ GetNodeFromPrePermutationIndex()\l+ ReadNodesPerProcessorFile()\l+ GetDistributedVectorFactory()\l+ SetDistributedVectorFactory()\l+ PermuteNodes()\l+ GetBoundaryNodeIteratorBegin()\l+ GetBoundaryNodeIteratorEnd()\l+ GetMeshFileBaseName()\l+ rGetNodePermutation()\l+ GetVectorFromAtoB()\l+ GetDistanceBetweenNodes()\l+ GetWidth()\l+ GetWidthExtremes()\l+ Scale()\l+ RefreshMesh()\l+ IsMeshChanging()\l+ SetMeshHasChangedSinceLoading()\l&#45; SolveNodeMapping()\l&#45; serialize()\l}" alt="" coords="956,704,1257,1213"/>
<area shape="rect" href="$classDistributedVectorFactory.html" title="{DistributedVectorFactory\n|&#45; mLo\l&#45; mHi\l&#45; mProblemSize\l&#45; mNumProcs\l&#45; mPetscStatusKnown\l&#45; mpOriginalFactory\l&#45; msCheckNumberOfProcessesOnLoad\l|+ DistributedVectorFactory()\l+ DistributedVectorFactory()\l+ DistributedVectorFactory()\l+ DistributedVectorFactory()\l+ ~DistributedVectorFactory()\l+ CreateVec()\l+ CreateVec()\l+ CreateDistributedVector()\l+ IsGlobalIndexLocal()\l+ GetLocalOwnership()\l+ GetHigh()\l+ GetLow()\l+ GetProblemSize()\l+ GetNumProcs()\l+ GetOriginalFactory()\l+ SetFromFactory()\l+ SetCheckNumberOfProcessesOnLoad()\l+ CheckNumberOfProcessesOnLoad()\l&#45; CheckForPetsc()\l&#45; CalculateOwnership()\l&#45; serialize()\l}" alt="" coords="1061,186,1325,626"/>
<area shape="rect" href="$classbool.html" title="{bool\n||}" alt="" coords="920,6,965,81"/>
<area shape="rect" href="$classunsigned.html" title="{unsigned\n||}" alt="" coords="2313,6,2385,81"/>
</map>
